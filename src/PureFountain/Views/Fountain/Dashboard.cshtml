@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



        
                    <div class="container-fluid">

                        <div data-widget-group="group1">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="amazo-tile tile-success">
                                        <div class="tile-heading">
                                            <div class="title">Revenue</div>
                                            <div class="secondary">past 28 days</div>
                                        </div>
                                        <div class="tile-body">
                                            <div class="content">$75,800</div>
                                        </div>
                                        <div class="tile-footer">
                                            <span class="info-text text-right">13.4% <i class="fa fa-level-up"></i></span>
                                            <div id="sparkline-revenue" class="sparkline-line"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="amazo-tile tile-info" href="#">
                                        <div class="tile-heading">
                                            <div class="title">Goals</div>
                                            <div class="secondary">orders this month</div>
                                        </div>
                                        <div class="tile-body">
                                            <div class="content">3,690</div>
                                        </div>
                                        <div class="tile-footer">
                                            <span class="info-text text-right">82% of 4,500</span>
                                            <div class="progress">
                                                <div class="progress-bar" style="width: 82%"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="amazo-tile tile-white">
                                        <div class="tile-heading">
                                            <div class="title">Items</div>
                                            <div class="secondary">past 28 days</div>
                                        </div>
                                        <div class="tile-body">
                                            <span class="content">407</span>
                                        </div>
                                        <div class="tile-footer text-center">
                                            <span class="info-text text-right" style="color: #f04743">13.4% <i class="fa fa-level-down"></i></span>
                                            <div id="sparkline-item" class="sparkline-bar"></div>
                                        </div>
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="amazo-tile tile-white">
                                        <div class="tile-heading">
                                            <span class="title">Commision</span>
                                            <span class="secondary">past 28 days</span>
                                        </div>
                                        <div class="tile-body">
                                            <span class="content">$9,500</span>
                                        </div>
                                        <div class="tile-footer">
                                            <span class="info-text text-right" style="color: #94c355">9.2% <i class="fa fa-level-up"></i></span>
                                            <div id="sparkline-commission" class="sparkline"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
               
                   
                      
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h2>Interacting with data point</h2>
                                    </div>
                                    <div class="panel-body">
                                        <div id="sincos" style="height: 300px"></div>
                                        <p id="hoverdata" class="text-center">Mouse hovers at (<span id="x">0</span>, <span id="y">0</span>). <span id="clickdata"></span></p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h2>Ordered Bars</h2>
                                    </div>
                                    <div class="panel-body">
                                        <div id="ordered" style="height: 300px;"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h2>Multiple Graph Types In One</h2>
                                    </div>
                                    <div class="panel-body">
                                        <div id="multiple" style="height: 300px" class="centered"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h2>Live Dynamic</h2>
                                    </div>
                                    <div class="panel-body">
                                        <div id="realtime-updates" style="height: 300px" class="centered"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h2>Stacking</h2>
                                    </div>
                                    <div class="panel-body">
                                        <div id="stacking" style="height: 300px" class="centered mb20"></div>
                                        <div class="clearfix">
                                            <ul class="stackControls demo-btns pull-left">
                                                <li><button class="btn btn-success-alt">With stacking</button></li>
                                                <li><button class="btn btn-success-alt">Without stacking</button></li>
                                            </ul>
                                            <ul class="graphControls demo-btns pull-right">
                                                <li><button class="btn btn-midnightblue-alt">Bars</button></li>
                                                <li><button class="btn btn-midnightblue-alt">Lines</button></li>
                                                <li><button class="btn btn-midnightblue-alt">Lines with steps</button></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h2>Pie Chart</h2>
                                    </div>
                                    <div class="panel-body">
                                        <div id="graph0" style="width:100%; height: 300px" class="centered"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h2>Donut</h2>
                                    </div>
                                    <div class="panel-body">
                                        <div id="donut" style="width:100%; height: 300px" class="centered"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h2>Interactive</h2>
                                    </div>
                                    <div class="panel-body">
                                        <div id="interactive" style="width:100%; height: 300px" class="centered"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        </div> <!-- .container-fluid -->



@*<!-- Load page level scripts-->

<script src="~/assets/plugins/charts-flot/jquery.flot.min.js"></script>             <!-- Flot Main File -->
<script src="~/assets/plugins/charts-flot/jquery.flot.stack.min.js"></script>       <!-- Flot Stacked Charts Plugin -->
<script src="~/assets/plugins/charts-flot/jquery.flot.pie.min.js"></script>         <!-- Flot Pie Chart Plugin -->
<script src="~/assets/plugins/charts-flot/jquery.flot.orderBars.min.js"></script>   <!-- Flot Ordered Bars Plugin-->
<script src="~/assets/plugins/charts-flot/jquery.flot.resize.js"></script>          <!-- Flot Responsive -->
<script src="~/assets/plugins/charts-flot/jquery.flot.tooltip.min.js"></script>    <!-- Flot Tooltips -->
<script src="~/assets/demo/demo-flotgraph.js"></script>*@
               
              
      <script>
          (function(e){e.color={},e.color.make=function(t,n,r,i){var s={};return s.r=t||0,s.g=n||0,s.b=r||0,s.a=i!=null?i:1,s.add=function(e,t){for(var n=0;n<e.length;++n)s[e.charAt(n)]+=t;return s.normalize()},s.scale=function(e,t){for(var n=0;n<e.length;++n)s[e.charAt(n)]*=t;return s.normalize()},s.toString=function(){return s.a>=1?"rgb("+[s.r,s.g,s.b].join(",")+")":"rgba("+[s.r,s.g,s.b,s.a].join(",")+")"},s.normalize=function(){function e(e,t,n){return t<e?e:t>n?n:t}return s.r=e(0,parseInt(s.r),255),s.g=e(0,parseInt(s.g),255),s.b=e(0,parseInt(s.b),255),s.a=e(0,s.a,1),s},s.clone=function(){return e.color.make(s.r,s.b,s.g,s.a)},s.normalize()},e.color.extract=function(t,n){var r;do{r=t.css(n).toLowerCase();if(r!=""&&r!="transparent")break;t=t.parent()}while(!e.nodeName(t.get(0),"body"));return r=="rgba(0, 0, 0, 0)"&&(r="transparent"),e.color.parse(r)},e.color.parse=function(n){var r,i=e.color.make;if(r=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(n))return i(parseInt(r[1],10),parseInt(r[2],10),parseInt(r[3],10));if(r=/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n))return i(parseInt(r[1],10),parseInt(r[2],10),parseInt(r[3],10),parseFloat(r[4]));if(r=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(n))return i(parseFloat(r[1])*2.55,parseFloat(r[2])*2.55,parseFloat(r[3])*2.55);if(r=/rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n))return i(parseFloat(r[1])*2.55,parseFloat(r[2])*2.55,parseFloat(r[3])*2.55,parseFloat(r[4]));if(r=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(n))return i(parseInt(r[1],16),parseInt(r[2],16),parseInt(r[3],16));if(r=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(n))return i(parseInt(r[1]+r[1],16),parseInt(r[2]+r[2],16),parseInt(r[3]+r[3],16));var s=e.trim(n).toLowerCase();return s=="transparent"?i(255,255,255,0):(r=t[s]||[0,0,0],i(r[0],r[1],r[2]))};var t={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery),function(e){function n(t,n){var r=n.children("."+t)[0];if(r==null){r=document.createElement("canvas"),r.className=t,e(r).css({direction:"ltr",position:"absolute",left:0,top:0}).appendTo(n);if(!r.getContext){if(!window.G_vmlCanvasManager)throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");r=window.G_vmlCanvasManager.initElement(r)}}this.element=r;var i=this.context=r.getContext("2d"),s=window.devicePixelRatio||1,o=i.webkitBackingStorePixelRatio||i.mozBackingStorePixelRatio||i.msBackingStorePixelRatio||i.oBackingStorePixelRatio||i.backingStorePixelRatio||1;this.pixelRatio=s/o,this.resize(n.width(),n.height()),this.textContainer=null,this.text={},this._textCache={}}function r(t,r,s,o){function E(e,t){t=[w].concat(t);for(var n=0;n<e.length;++n)e[n].apply(this,t)}function S(){var t={Canvas:n};for(var r=0;r<o.length;++r){var i=o[r];i.init(w,t),i.options&&e.extend(!0,a,i.options)}}function x(n){e.extend(!0,a,n),n&&n.colors&&(a.colors=n.colors),a.xaxis.color==null&&(a.xaxis.color=e.color.parse(a.grid.color).scale("a",.22).toString()),a.yaxis.color==null&&(a.yaxis.color=e.color.parse(a.grid.color).scale("a",.22).toString()),a.xaxis.tickColor==null&&(a.xaxis.tickColor=a.grid.tickColor||a.xaxis.color),a.yaxis.tickColor==null&&(a.yaxis.tickColor=a.grid.tickColor||a.yaxis.color),a.grid.borderColor==null&&(a.grid.borderColor=a.grid.color),a.grid.tickColor==null&&(a.grid.tickColor=e.color.parse(a.grid.color).scale("a",.22).toString());var r,i,s,o={style:t.css("font-style"),size:Math.round(.8*(+t.css("font-size").replace("px","")||13)),variant:t.css("font-variant"),weight:t.css("font-weight"),family:t.css("font-family")};o.lineHeight=o.size*1.15,s=a.xaxes.length||1;for(r=0;r<s;++r)i=a.xaxes[r],i&&!i.tickColor&&(i.tickColor=i.color),i=e.extend(!0,{},a.xaxis,i),a.xaxes[r]=i,i.font&&(i.font=e.extend({},o,i.font),i.font.color||(i.font.color=i.color));s=a.yaxes.length||1;for(r=0;r<s;++r)i=a.yaxes[r],i&&!i.tickColor&&(i.tickColor=i.color),i=e.extend(!0,{},a.yaxis,i),a.yaxes[r]=i,i.font&&(i.font=e.extend({},o,i.font),i.font.color||(i.font.color=i.color));a.xaxis.noTicks&&a.xaxis.ticks==null&&(a.xaxis.ticks=a.xaxis.noTicks),a.yaxis.noTicks&&a.yaxis.ticks==null&&(a.yaxis.ticks=a.yaxis.noTicks),a.x2axis&&(a.xaxes[1]=e.extend(!0,{},a.xaxis,a.x2axis),a.xaxes[1].position="top"),a.y2axis&&(a.yaxes[1]=e.extend(!0,{},a.yaxis,a.y2axis),a.yaxes[1].position="right"),a.grid.coloredAreas&&(a.grid.markings=a.grid.coloredAreas),a.grid.coloredAreasColor&&(a.grid.markingsColor=a.grid.coloredAreasColor),a.lines&&e.extend(!0,a.series.lines,a.lines),a.points&&e.extend(!0,a.series.points,a.points),a.bars&&e.extend(!0,a.series.bars,a.bars),a.shadowSize!=null&&(a.series.shadowSize=a.shadowSize),a.highlightColor!=null&&(a.series.highlightColor=a.highlightColor);for(r=0;r<a.xaxes.length;++r)O(d,r+1).options=a.xaxes[r];for(r=0;r<a.yaxes.length;++r)O(v,r+1).options=a.yaxes[r];for(var u in b)a.hooks[u]&&a.hooks[u].length&&(b[u]=b[u].concat(a.hooks[u]));E(b.processOptions,[a])}function T(e){u=N(e),M(),_()}function N(t){var n=[];for(var r=0;r<t.length;++r){var i=e.extend(!0,{},a.series);t[r].data!=null?(i.data=t[r].data,delete t[r].data,e.extend(!0,i,t[r]),t[r].data=i.data):i.data=t[r],n.push(i)}return n}function C(e,t){var n=e[t+"axis"];return typeof n=="object"&&(n=n.n),typeof n!="number"&&(n=1),n}function k(){return e.grep(d.concat(v),function(e){return e})}function L(e){var t={},n,r;for(n=0;n<d.length;++n)r=d[n],r&&r.used&&(t["x"+r.n]=r.c2p(e.left));for(n=0;n<v.length;++n)r=v[n],r&&r.used&&(t["y"+r.n]=r.c2p(e.top));return t.x1!==undefined&&(t.x=t.x1),t.y1!==undefined&&(t.y=t.y1),t}function A(e){var t={},n,r,i;for(n=0;n<d.length;++n){r=d[n];if(r&&r.used){i="x"+r.n,e[i]==null&&r.n==1&&(i="x");if(e[i]!=null){t.left=r.p2c(e[i]);break}}}for(n=0;n<v.length;++n){r=v[n];if(r&&r.used){i="y"+r.n,e[i]==null&&r.n==1&&(i="y");if(e[i]!=null){t.top=r.p2c(e[i]);break}}}return t}function O(t,n){return t[n-1]||(t[n-1]={n:n,direction:t==d?"x":"y",options:e.extend(!0,{},t==d?a.xaxis:a.yaxis)}),t[n-1]}function M(){var t=u.length,n=-1,r;for(r=0;r<u.length;++r){var i=u[r].color;i!=null&&(t--,typeof i=="number"&&i>n&&(n=i))}t<=n&&(t=n+1);var s,o=[],f=a.colors,l=f.length,c=0;for(r=0;r<t;r++)s=e.color.parse(f[r%l]||"#666"),r%l==0&&r&&(c>=0?c<.5?c=-c-.2:c=0:c=-c),o[r]=s.scale("rgb",1+c);var h=0,p;for(r=0;r<u.length;++r){p=u[r],p.color==null?(p.color=o[h].toString(),++h):typeof p.color=="number"&&(p.color=o[p.color].toString());if(p.lines.show==null){var m,g=!0;for(m in p)if(p[m]&&p[m].show){g=!1;break}g&&(p.lines.show=!0)}p.lines.zero==null&&(p.lines.zero=!!p.lines.fill),p.xaxis=O(d,C(p,"x")),p.yaxis=O(v,C(p,"y"))}}function _(){function x(e,t,n){t<e.datamin&&t!=-r&&(e.datamin=t),n>e.datamax&&n!=r&&(e.datamax=n)}var t=Number.POSITIVE_INFINITY,n=Number.NEGATIVE_INFINITY,r=Number.MAX_VALUE,i,s,o,a,f,l,c,h,p,d,v,m,g,y,w,S;e.each(k(),function(e,r){r.datamin=t,r.datamax=n,r.used=!1});for(i=0;i<u.length;++i)l=u[i],l.datapoints={points:[]},E(b.processRawData,[l,l.data,l.datapoints]);for(i=0;i<u.length;++i){l=u[i],w=l.data,S=l.datapoints.format;if(!S){S=[],S.push({x:!0,number:!0,required:!0}),S.push({y:!0,number:!0,required:!0});if(l.bars.show||l.lines.show&&l.lines.fill){var T=!!(l.bars.show&&l.bars.zero||l.lines.show&&l.lines.zero);S.push({y:!0,number:!0,required:!1,defaultValue:0,autoscale:T}),l.bars.horizontal&&(delete S[S.length-1].y,S[S.length-1].x=!0)}l.datapoints.format=S}if(l.datapoints.pointsize!=null)continue;l.datapoints.pointsize=S.length,h=l.datapoints.pointsize,c=l.datapoints.points;var N=l.lines.show&&l.lines.steps;l.xaxis.used=l.yaxis.used=!0;for(s=o=0;s<w.length;++s,o+=h){y=w[s];var C=y==null;if(!C)for(a=0;a<h;++a)m=y[a],g=S[a],g&&(g.number&&m!=null&&(m=+m,isNaN(m)?m=null:m==Infinity?m=r:m==-Infinity&&(m=-r)),m==null&&(g.required&&(C=!0),g.defaultValue!=null&&(m=g.defaultValue))),c[o+a]=m;if(C)for(a=0;a<h;++a)m=c[o+a],m!=null&&(g=S[a],g.autoscale&&(g.x&&x(l.xaxis,m,m),g.y&&x(l.yaxis,m,m))),c[o+a]=null;else if(N&&o>0&&c[o-h]!=null&&c[o-h]!=c[o]&&c[o-h+1]!=c[o+1]){for(a=0;a<h;++a)c[o+h+a]=c[o+a];c[o+1]=c[o-h+1],o+=h}}}for(i=0;i<u.length;++i)l=u[i],E(b.processDatapoints,[l,l.datapoints]);for(i=0;i<u.length;++i){l=u[i],c=l.datapoints.points,h=l.datapoints.pointsize,S=l.datapoints.format;var L=t,A=t,O=n,M=n;for(s=0;s<c.length;s+=h){if(c[s]==null)continue;for(a=0;a<h;++a){m=c[s+a],g=S[a];if(!g||g.autoscale===!1||m==r||m==-r)continue;g.x&&(m<L&&(L=m),m>O&&(O=m)),g.y&&(m<A&&(A=m),m>M&&(M=m))}}if(l.bars.show){var _;switch(l.bars.align){case"left":_=0;break;case"right":_=-l.bars.barWidth;break;case"center":_=-l.bars.barWidth/2;break;default:throw new Error("Invalid bar alignment: "+l.bars.align)}l.bars.horizontal?(A+=_,M+=_+l.bars.barWidth):(L+=_,O+=_+l.bars.barWidth)}x(l.xaxis,L,O),x(l.yaxis,A,M)}e.each(k(),function(e,r){r.datamin==t&&(r.datamin=null),r.datamax==n&&(r.datamax=null)})}function D(){t.css("padding",0).children(":not(.flot-base,.flot-overlay)").remove(),t.css("position")=="static"&&t.css("position","relative"),f=new n("flot-base",t),l=new n("flot-overlay",t),h=f.context,p=l.context,c=e(l.element).unbind();var r=t.data("plot");r&&(r.shutdown(),l.clear()),t.data("plot",w)}function P(){a.grid.hoverable&&(c.mousemove(at),c.bind("mouseleave",ft)),a.grid.clickable&&c.click(lt),E(b.bindEvents,[c])}function H(){ot&&clearTimeout(ot),c.unbind("mousemove",at),c.unbind("mouseleave",ft),c.unbind("click",lt),E(b.shutdown,[c])}function B(e){function t(e){return e}var n,r,i=e.options.transform||t,s=e.options.inverseTransform;e.direction=="x"?(n=e.scale=g/Math.abs(i(e.max)-i(e.min)),r=Math.min(i(e.max),i(e.min))):(n=e.scale=y/Math.abs(i(e.max)-i(e.min)),n=-n,r=Math.max(i(e.max),i(e.min))),i==t?e.p2c=function(e){return(e-r)*n}:e.p2c=function(e){return(i(e)-r)*n},s?e.c2p=function(e){return s(r+e/n)}:e.c2p=function(e){return r+e/n}}function j(e){var t=e.options,n=e.ticks||[],r=t.labelWidth||0,i=t.labelHeight||0,s=r||e.direction=="x"?Math.floor(f.width/(n.length||1)):null;legacyStyles=e.direction+"Axis "+e.direction+e.n+"Axis",layer="flot-"+e.direction+"-axis flot-"+e.direction+e.n+"-axis "+legacyStyles,font=t.font||"flot-tick-label tickLabel";for(var o=0;o<n.length;++o){var u=n[o];if(!u.label)continue;var a=f.getTextInfo(layer,u.label,font,null,s);r=Math.max(r,a.width),i=Math.max(i,a.height)}e.labelWidth=t.labelWidth||r,e.labelHeight=t.labelHeight||i}function F(t){var n=t.labelWidth,r=t.labelHeight,i=t.options.position,s=t.options.tickLength,o=a.grid.axisMargin,u=a.grid.labelMargin,l=t.direction=="x"?d:v,c,h,p=e.grep(l,function(e){return e&&e.options.position==i&&e.reserveSpace});e.inArray(t,p)==p.length-1&&(o=0);if(s==null){var g=e.grep(l,function(e){return e&&e.reserveSpace});h=e.inArray(t,g)==0,h?s="full":s=5}isNaN(+s)||(u+=+s),t.direction=="x"?(r+=u,i=="bottom"?(m.bottom+=r+o,t.box={top:f.height-m.bottom,height:r}):(t.box={top:m.top+o,height:r},m.top+=r+o)):(n+=u,i=="left"?(t.box={left:m.left+o,width:n},m.left+=n+o):(m.right+=n+o,t.box={left:f.width-m.right,width:n})),t.position=i,t.tickLength=s,t.box.padding=u,t.innermost=h}function I(e){e.direction=="x"?(e.box.left=m.left-e.labelWidth/2,e.box.width=f.width-m.left-m.right+e.labelWidth):(e.box.top=m.top-e.labelHeight/2,e.box.height=f.height-m.bottom-m.top+e.labelHeight)}function q(){var t=a.grid.minBorderMargin,n={x:0,y:0},r,i;if(t==null){t=0;for(r=0;r<u.length;++r)t=Math.max(t,2*(u[r].points.radius+u[r].points.lineWidth/2))}n.x=n.y=Math.ceil(t),e.each(k(),function(e,t){var r=t.direction;t.reserveSpace&&(n[r]=Math.ceil(Math.max(n[r],(r=="x"?t.labelWidth:t.labelHeight)/2)))}),m.left=Math.max(n.x,m.left),m.right=Math.max(n.x,m.right),m.top=Math.max(n.y,m.top),m.bottom=Math.max(n.y,m.bottom)}function R(){var t,n=k(),r=a.grid.show;for(var i in m){var s=a.grid.margin||0;m[i]=typeof s=="number"?s:s[i]||0}E(b.processOffset,[m]);for(var i in m)typeof a.grid.borderWidth=="object"?m[i]+=r?a.grid.borderWidth[i]:0:m[i]+=r?a.grid.borderWidth:0;e.each(n,function(e,t){t.show=t.options.show,t.show==null&&(t.show=t.used),t.reserveSpace=t.show||t.options.reserveSpace,U(t)});if(r){var o=e.grep(n,function(e){return e.reserveSpace});e.each(o,function(e,t){z(t),W(t),X(t,t.ticks),j(t)});for(t=o.length-1;t>=0;--t)F(o[t]);q(),e.each(o,function(e,t){I(t)})}g=f.width-m.left-m.right,y=f.height-m.bottom-m.top,e.each(n,function(e,t){B(t)}),r&&G(),it()}function U(e){var t=e.options,n=+(t.min!=null?t.min:e.datamin),r=+(t.max!=null?t.max:e.datamax),i=r-n;if(i==0){var s=r==0?1:.01;t.min==null&&(n-=s);if(t.max==null||t.min!=null)r+=s}else{var o=t.autoscaleMargin;o!=null&&(t.min==null&&(n-=i*o,n<0&&e.datamin!=null&&e.datamin>=0&&(n=0)),t.max==null&&(r+=i*o,r>0&&e.datamax!=null&&e.datamax<=0&&(r=0)))}e.min=n,e.max=r}function z(t){var n=t.options,r;typeof n.ticks=="number"&&n.ticks>0?r=n.ticks:r=.3*Math.sqrt(t.direction=="x"?f.width:f.height);var s=(t.max-t.min)/r,o=-Math.floor(Math.log(s)/Math.LN10),u=n.tickDecimals;u!=null&&o>u&&(o=u);var a=Math.pow(10,-o),l=s/a,c;l<1.5?c=1:l<3?(c=2,l>2.25&&(u==null||o+1<=u)&&(c=2.5,++o)):l<7.5?c=5:c=10,c*=a,n.minTickSize!=null&&c<n.minTickSize&&(c=n.minTickSize),t.delta=s,t.tickDecimals=Math.max(0,u!=null?u:o),t.tickSize=n.tickSize||c;if(n.mode=="time"&&!t.tickGenerator)throw new Error("Time mode requires the flot.time plugin.");t.tickGenerator||(t.tickGenerator=function(e){var t=[],n=i(e.min,e.tickSize),r=0,s=Number.NaN,o;do o=s,s=n+r*e.tickSize,t.push(s),++r;while(s<e.max&&s!=o);return t},t.tickFormatter=function(e,t){var n=t.tickDecimals?Math.pow(10,t.tickDecimals):1,r=""+Math.round(e*n)/n;if(t.tickDecimals!=null){var i=r.indexOf("."),s=i==-1?0:r.length-i-1;if(s<t.tickDecimals)return(s?r:r+".")+(""+n).substr(1,t.tickDecimals-s)}return r}),e.isFunction(n.tickFormatter)&&(t.tickFormatter=function(e,t){return""+n.tickFormatter(e,t)});if(n.alignTicksWithAxis!=null){var h=(t.direction=="x"?d:v)[n.alignTicksWithAxis-1];if(h&&h.used&&h!=t){var p=t.tickGenerator(t);p.length>0&&(n.min==null&&(t.min=Math.min(t.min,p[0])),n.max==null&&p.length>1&&(t.max=Math.max(t.max,p[p.length-1]))),t.tickGenerator=function(e){var t=[],n,r;for(r=0;r<h.ticks.length;++r)n=(h.ticks[r].v-h.min)/(h.max-h.min),n=e.min+n*(e.max-e.min),t.push(n);return t};if(!t.mode&&n.tickDecimals==null){var m=Math.max(0,-Math.floor(Math.log(t.delta)/Math.LN10)+1),g=t.tickGenerator(t);g.length>1&&/\..*0$/.test((g[1]-g[0]).toFixed(m))||(t.tickDecimals=m)}}}}function W(t){var n=t.options.ticks,r=[];n==null||typeof n=="number"&&n>0?r=t.tickGenerator(t):n&&(e.isFunction(n)?r=n(t):r=n);var i,s;t.ticks=[];for(i=0;i<r.length;++i){var o=null,u=r[i];typeof u=="object"?(s=+u[0],u.length>1&&(o=u[1])):s=+u,o==null&&(o=t.tickFormatter(s,t)),isNaN(s)||t.ticks.push({v:s,label:o})}}function X(e,t){e.options.autoscaleMargin&&t.length>0&&(e.options.min==null&&(e.min=Math.min(e.min,t[0].v)),e.options.max==null&&t.length>1&&(e.max=Math.max(e.max,t[t.length-1].v)))}function V(){f.clear(),E(b.drawBackground,[h]);var e=a.grid;e.show&&e.backgroundColor&&K(),e.show&&!e.aboveData&&Q();for(var t=0;t<u.length;++t)E(b.drawSeries,[h,u[t]]),Y(u[t]);E(b.draw,[h]),e.show&&e.aboveData&&Q(),f.render(),ht()}function J(e,t){var n,r,i,s,o=k();for(var u=0;u<o.length;++u){n=o[u];if(n.direction==t){s=t+n.n+"axis",!e[s]&&n.n==1&&(s=t+"axis");if(e[s]){r=e[s].from,i=e[s].to;break}}}e[s]||(n=t=="x"?d[0]:v[0],r=e[t+"1"],i=e[t+"2"]);if(r!=null&&i!=null&&r>i){var a=r;r=i,i=a}return{from:r,to:i,axis:n}}function K(){h.save(),h.translate(m.left,m.top),h.fillStyle=bt(a.grid.backgroundColor,y,0,"rgba(255, 255, 255, 0)"),h.fillRect(0,0,g,y),h.restore()}function Q(){var t,n,r,i;h.save(),h.translate(m.left,m.top);var s=a.grid.markings;if(s){e.isFunction(s)&&(n=w.getAxes(),n.xmin=n.xaxis.min,n.xmax=n.xaxis.max,n.ymin=n.yaxis.min,n.ymax=n.yaxis.max,s=s(n));for(t=0;t<s.length;++t){var o=s[t],u=J(o,"x"),f=J(o,"y");u.from==null&&(u.from=u.axis.min),u.to==null&&(u.to=u.axis.max),f.from==null&&(f.from=f.axis.min),f.to==null&&(f.to=f.axis.max);if(u.to<u.axis.min||u.from>u.axis.max||f.to<f.axis.min||f.from>f.axis.max)continue;u.from=Math.max(u.from,u.axis.min),u.to=Math.min(u.to,u.axis.max),f.from=Math.max(f.from,f.axis.min),f.to=Math.min(f.to,f.axis.max);if(u.from==u.to&&f.from==f.to)continue;u.from=u.axis.p2c(u.from),u.to=u.axis.p2c(u.to),f.from=f.axis.p2c(f.from),f.to=f.axis.p2c(f.to),u.from==u.to||f.from==f.to?(h.beginPath(),h.strokeStyle=o.color||a.grid.markingsColor,h.lineWidth=o.lineWidth||a.grid.markingsLineWidth,h.moveTo(u.from,f.from),h.lineTo(u.to,f.to),h.stroke()):(h.fillStyle=o.color||a.grid.markingsColor,h.fillRect(u.from,f.to,u.to-u.from,f.from-f.to))}}n=k(),r=a.grid.borderWidth;for(var l=0;l<n.length;++l){var c=n[l],p=c.box,d=c.tickLength,v,b,E,S;if(!c.show||c.ticks.length==0)continue;h.lineWidth=1,c.direction=="x"?(v=0,d=="full"?b=c.position=="top"?0:y:b=p.top-m.top+(c.position=="top"?p.height:0)):(b=0,d=="full"?v=c.position=="left"?0:g:v=p.left-m.left+(c.position=="left"?p.width:0)),c.innermost||(h.strokeStyle=c.options.color,h.beginPath(),E=S=0,c.direction=="x"?E=g+1:S=y+1,h.lineWidth==1&&(c.direction=="x"?b=Math.floor(b)+.5:v=Math.floor(v)+.5),h.moveTo(v,b),h.lineTo(v+E,b+S),h.stroke()),h.strokeStyle=c.options.tickColor,h.beginPath();for(t=0;t<c.ticks.length;++t){var x=c.ticks[t].v;E=S=0;if(isNaN(x)||x<c.min||x>c.max||d=="full"&&(typeof r=="object"&&r[c.position]>0||r>0)&&(x==c.min||x==c.max))continue;c.direction=="x"?(v=c.p2c(x),S=d=="full"?-y:d,c.position=="top"&&(S=-S)):(b=c.p2c(x),E=d=="full"?-g:d,c.position=="left"&&(E=-E)),h.lineWidth==1&&(c.direction=="x"?v=Math.floor(v)+.5:b=Math.floor(b)+.5),h.moveTo(v,b),h.lineTo(v+E,b+S)}h.stroke()}r&&(i=a.grid.borderColor,typeof r=="object"||typeof i=="object"?(typeof r!="object"&&(r={top:r,right:r,bottom:r,left:r}),typeof i!="object"&&(i={top:i,right:i,bottom:i,left:i}),r.top>0&&(h.strokeStyle=i.top,h.lineWidth=r.top,h.beginPath(),h.moveTo(0-r.left,0-r.top/2),h.lineTo(g,0-r.top/2),h.stroke()),r.right>0&&(h.strokeStyle=i.right,h.lineWidth=r.right,h.beginPath(),h.moveTo(g+r.right/2,0-r.top),h.lineTo(g+r.right/2,y),h.stroke()),r.bottom>0&&(h.strokeStyle=i.bottom,h.lineWidth=r.bottom,h.beginPath(),h.moveTo(g+r.right,y+r.bottom/2),h.lineTo(0,y+r.bottom/2),h.stroke()),r.left>0&&(h.strokeStyle=i.left,h.lineWidth=r.left,h.beginPath(),h.moveTo(0-r.left/2,y+r.bottom),h.lineTo(0-r.left/2,0),h.stroke())):(h.lineWidth=r,h.strokeStyle=a.grid.borderColor,h.strokeRect(-r/2,-r/2,g+r,y+r))),h.restore()}function G(){e.each(k(),function(e,t){if(!t.show||t.ticks.length==0)return;var n=t.box,r=t.direction+"Axis "+t.direction+t.n+"Axis",i="flot-"+t.direction+"-axis flot-"+t.direction+t.n+"-axis "+r,s=t.options.font||"flot-tick-label tickLabel",o,u,a,l,c;f.removeText(i);for(var h=0;h<t.ticks.length;++h){o=t.ticks[h];if(!o.label||o.v<t.min||o.v>t.max)continue;t.direction=="x"?(l="center",u=m.left+t.p2c(o.v),t.position=="bottom"?a=n.top+n.padding:(a=n.top+n.height-n.padding,c="bottom")):(c="middle",a=m.top+t.p2c(o.v),t.position=="left"?(u=n.left+n.width-n.padding,l="right"):u=n.left+n.padding),f.addText(i,u,a,o.label,s,null,null,l,c)}})}function Y(e){e.lines.show&&Z(e),e.bars.show&&nt(e),e.points.show&&et(e)}function Z(e){function t(e,t,n,r,i){var s=e.points,o=e.pointsize,u=null,a=null;h.beginPath();for(var f=o;f<s.length;f+=o){var l=s[f-o],c=s[f-o+1],p=s[f],d=s[f+1];if(l==null||p==null)continue;if(c<=d&&c<i.min){if(d<i.min)continue;l=(i.min-c)/(d-c)*(p-l)+l,c=i.min}else if(d<=c&&d<i.min){if(c<i.min)continue;p=(i.min-c)/(d-c)*(p-l)+l,d=i.min}if(c>=d&&c>i.max){if(d>i.max)continue;l=(i.max-c)/(d-c)*(p-l)+l,c=i.max}else if(d>=c&&d>i.max){if(c>i.max)continue;p=(i.max-c)/(d-c)*(p-l)+l,d=i.max}if(l<=p&&l<r.min){if(p<r.min)continue;c=(r.min-l)/(p-l)*(d-c)+c,l=r.min}else if(p<=l&&p<r.min){if(l<r.min)continue;d=(r.min-l)/(p-l)*(d-c)+c,p=r.min}if(l>=p&&l>r.max){if(p>r.max)continue;c=(r.max-l)/(p-l)*(d-c)+c,l=r.max}else if(p>=l&&p>r.max){if(l>r.max)continue;d=(r.max-l)/(p-l)*(d-c)+c,p=r.max}(l!=u||c!=a)&&h.moveTo(r.p2c(l)+t,i.p2c(c)+n),u=p,a=d,h.lineTo(r.p2c(p)+t,i.p2c(d)+n)}h.stroke()}function n(e,t,n){var r=e.points,i=e.pointsize,s=Math.min(Math.max(0,n.min),n.max),o=0,u,a=!1,f=1,l=0,c=0;for(;;){if(i>0&&o>r.length+i)break;o+=i;var p=r[o-i],d=r[o-i+f],v=r[o],m=r[o+f];if(a){if(i>0&&p!=null&&v==null){c=o,i=-i,f=2;continue}if(i<0&&o==l+i){h.fill(),a=!1,i=-i,f=1,o=l=c+i;continue}}if(p==null||v==null)continue;if(p<=v&&p<t.min){if(v<t.min)continue;d=(t.min-p)/(v-p)*(m-d)+d,p=t.min}else if(v<=p&&v<t.min){if(p<t.min)continue;m=(t.min-p)/(v-p)*(m-d)+d,v=t.min}if(p>=v&&p>t.max){if(v>t.max)continue;d=(t.max-p)/(v-p)*(m-d)+d,p=t.max}else if(v>=p&&v>t.max){if(p>t.max)continue;m=(t.max-p)/(v-p)*(m-d)+d,v=t.max}a||(h.beginPath(),h.moveTo(t.p2c(p),n.p2c(s)),a=!0);if(d>=n.max&&m>=n.max){h.lineTo(t.p2c(p),n.p2c(n.max)),h.lineTo(t.p2c(v),n.p2c(n.max));continue}if(d<=n.min&&m<=n.min){h.lineTo(t.p2c(p),n.p2c(n.min)),h.lineTo(t.p2c(v),n.p2c(n.min));continue}var g=p,y=v;d<=m&&d<n.min&&m>=n.min?(p=(n.min-d)/(m-d)*(v-p)+p,d=n.min):m<=d&&m<n.min&&d>=n.min&&(v=(n.min-d)/(m-d)*(v-p)+p,m=n.min),d>=m&&d>n.max&&m<=n.max?(p=(n.max-d)/(m-d)*(v-p)+p,d=n.max):m>=d&&m>n.max&&d<=n.max&&(v=(n.max-d)/(m-d)*(v-p)+p,m=n.max),p!=g&&h.lineTo(t.p2c(g),n.p2c(d)),h.lineTo(t.p2c(p),n.p2c(d)),h.lineTo(t.p2c(v),n.p2c(m)),v!=y&&(h.lineTo(t.p2c(v),n.p2c(m)),h.lineTo(t.p2c(y),n.p2c(m)))}}h.save(),h.translate(m.left,m.top),h.lineJoin="round";var r=e.lines.lineWidth,i=e.shadowSize;if(r>0&&i>0){h.lineWidth=i,h.strokeStyle="rgba(0,0,0,0.1)";var s=Math.PI/18;t(e.datapoints,Math.sin(s)*(r/2+i/2),Math.cos(s)*(r/2+i/2),e.xaxis,e.yaxis),h.lineWidth=i/2,t(e.datapoints,Math.sin(s)*(r/2+i/4),Math.cos(s)*(r/2+i/4),e.xaxis,e.yaxis)}h.lineWidth=r,h.strokeStyle=e.color;var o=rt(e.lines,e.color,0,y);o&&(h.fillStyle=o,n(e.datapoints,e.xaxis,e.yaxis)),r>0&&t(e.datapoints,0,0,e.xaxis,e.yaxis),h.restore()}function et(e){function t(e,t,n,r,i,s,o,u){var a=e.points,f=e.pointsize;for(var l=0;l<a.length;l+=f){var c=a[l],p=a[l+1];if(c==null||c<s.min||c>s.max||p<o.min||p>o.max)continue;h.beginPath(),c=s.p2c(c),p=o.p2c(p)+r,u=="circle"?h.arc(c,p,t,0,i?Math.PI:Math.PI*2,!1):u(h,c,p,t,i),h.closePath(),n&&(h.fillStyle=n,h.fill()),h.stroke()}}h.save(),h.translate(m.left,m.top);var n=e.points.lineWidth,r=e.shadowSize,i=e.points.radius,s=e.points.symbol;n==0&&(n=1e-4);if(n>0&&r>0){var o=r/2;h.lineWidth=o,h.strokeStyle="rgba(0,0,0,0.1)",t(e.datapoints,i,null,o+o/2,!0,e.xaxis,e.yaxis,s),h.strokeStyle="rgba(0,0,0,0.2)",t(e.datapoints,i,null,o/2,!0,e.xaxis,e.yaxis,s)}h.lineWidth=n,h.strokeStyle=e.color,t(e.datapoints,i,rt(e.points,e.color),0,!1,e.xaxis,e.yaxis,s),h.restore()}function tt(e,t,n,r,i,s,o,u,a,f,l,c){var h,p,d,v,m,g,y,b,w;l?(b=g=y=!0,m=!1,h=n,p=e,v=t+r,d=t+i,p<h&&(w=p,p=h,h=w,m=!0,g=!1)):(m=g=y=!0,b=!1,h=e+r,p=e+i,d=n,v=t,v<d&&(w=v,v=d,d=w,b=!0,y=!1));if(p<u.min||h>u.max||v<a.min||d>a.max)return;h<u.min&&(h=u.min,m=!1),p>u.max&&(p=u.max,g=!1),d<a.min&&(d=a.min,b=!1),v>a.max&&(v=a.max,y=!1),h=u.p2c(h),d=a.p2c(d),p=u.p2c(p),v=a.p2c(v),o&&(f.beginPath(),f.moveTo(h,d),f.lineTo(h,v),f.lineTo(p,v),f.lineTo(p,d),f.fillStyle=o(d,v),f.fill()),c>0&&(m||g||y||b)&&(f.beginPath(),f.moveTo(h,d+s),m?f.lineTo(h,v+s):f.moveTo(h,v+s),y?f.lineTo(p,v+s):f.moveTo(p,v+s),g?f.lineTo(p,d+s):f.moveTo(p,d+s),b?f.lineTo(h,d+s):f.moveTo(h,d+s),f.stroke())}function nt(e){function t(t,n,r,i,s,o,u){var a=t.points,f=t.pointsize;for(var l=0;l<a.length;l+=f){if(a[l]==null)continue;tt(a[l],a[l+1],a[l+2],n,r,i,s,o,u,h,e.bars.horizontal,e.bars.lineWidth)}}h.save(),h.translate(m.left,m.top),h.lineWidth=e.bars.lineWidth,h.strokeStyle=e.color;var n;switch(e.bars.align){case"left":n=0;break;case"right":n=-e.bars.barWidth;break;case"center":n=-e.bars.barWidth/2;break;default:throw new Error("Invalid bar alignment: "+e.bars.align)}var r=e.bars.fill?function(t,n){return rt(e.bars,e.color,t,n)}:null;t(e.datapoints,n,n+e.bars.barWidth,0,r,e.xaxis,e.yaxis),h.restore()}function rt(t,n,r,i){var s=t.fill;if(!s)return null;if(t.fillColor)return bt(t.fillColor,r,i,n);var o=e.color.parse(n);return o.a=typeof s=="number"?s:.4,o.normalize(),o.toString()}function it(){t.find(".legend").remove();if(!a.legend.show)return;var n=[],r=[],i=!1,s=a.legend.labelFormatter,o,f;for(var l=0;l<u.length;++l)o=u[l],o.label&&(f=s?s(o.label,o):o.label,f&&r.push({label:f,color:o.color}));if(a.legend.sorted)if(e.isFunction(a.legend.sorted))r.sort(a.legend.sorted);else if(a.legend.sorted=="reverse")r.reverse();else{var c=a.legend.sorted!="descending";r.sort(function(e,t){return e.label==t.label?0:e.label<t.label!=c?1:-1})}for(var l=0;l<r.length;++l){var h=r[l];l%a.legend.noColumns==0&&(i&&n.push("</tr>"),n.push("<tr>"),i=!0),n.push('<td class="legendColorBox"><div style="border:1px solid '+a.legend.labelBoxBorderColor+';padding:1px"><div style="width:4px;height:0;border:5px solid '+h.color+';overflow:hidden"></div></div></td>'+'<td class="legendLabel">'+h.label+"</td>")}i&&n.push("</tr>");if(n.length==0)return;var p='<table style="font-size:smaller;color:'+a.grid.color+'">'+n.join("")+"</table>";if(a.legend.container!=null)e(a.legend.container).html(p);else{var d="",v=a.legend.position,g=a.legend.margin;g[0]==null&&(g=[g,g]),v.charAt(0)=="n"?d+="top:"+(g[1]+m.top)+"px;":v.charAt(0)=="s"&&(d+="bottom:"+(g[1]+m.bottom)+"px;"),v.charAt(1)=="e"?d+="right:"+(g[0]+m.right)+"px;":v.charAt(1)=="w"&&(d+="left:"+(g[0]+m.left)+"px;");var y=e('<div class="legend">'+p.replace('style="','style="position:absolute;'+d+";")+"</div>").appendTo(t);if(a.legend.backgroundOpacity!=0){var b=a.legend.backgroundColor;b==null&&(b=a.grid.backgroundColor,b&&typeof b=="string"?b=e.color.parse(b):b=e.color.extract(y,"background-color"),b.a=1,b=b.toString());var w=y.children();e('<div style="position:absolute;width:'+w.width()+"px;height:"+w.height()+"px;"+d+"background-color:"+b+';"> </div>').prependTo(y).css("opacity",a.legend.backgroundOpacity)}}}function ut(e,t,n){var r=a.grid.mouseActiveRadius,i=r*r+1,s=null,o=!1,f,l,c;for(f=u.length-1;f>=0;--f){if(!n(u[f]))continue;var h=u[f],p=h.xaxis,d=h.yaxis,v=h.datapoints.points,m=p.c2p(e),g=d.c2p(t),y=r/p.scale,b=r/d.scale;c=h.datapoints.pointsize,p.options.inverseTransform&&(y=Number.MAX_VALUE),d.options.inverseTransform&&(b=Number.MAX_VALUE);if(h.lines.show||h.points.show)for(l=0;l<v.length;l+=c){var w=v[l],E=v[l+1];if(w==null)continue;if(w-m>y||w-m<-y||E-g>b||E-g<-b)continue;var S=Math.abs(p.p2c(w)-e),x=Math.abs(d.p2c(E)-t),T=S*S+x*x;T<i&&(i=T,s=[f,l/c])}if(h.bars.show&&!s){var N=h.bars.align=="left"?0:-h.bars.barWidth/2,C=N+h.bars.barWidth;for(l=0;l<v.length;l+=c){var w=v[l],E=v[l+1],k=v[l+2];if(w==null)continue;if(u[f].bars.horizontal?m<=Math.max(k,w)&&m>=Math.min(k,w)&&g>=E+N&&g<=E+C:m>=w+N&&m<=w+C&&g>=Math.min(k,E)&&g<=Math.max(k,E))s=[f,l/c]}}}return s?(f=s[0],l=s[1],c=u[f].datapoints.pointsize,{datapoint:u[f].datapoints.points.slice(l*c,(l+1)*c),dataIndex:l,series:u[f],seriesIndex:f}):null}function at(e){a.grid.hoverable&&ct("plothover",e,function(e){return e["hoverable"]!=0})}function ft(e){a.grid.hoverable&&ct("plothover",e,function(e){return!1})}function lt(e){ct("plotclick",e,function(e){return e["clickable"]!=0})}function ct(e,n,r){var i=c.offset(),s=n.pageX-i.left-m.left,o=n.pageY-i.top-m.top,u=L({left:s,top:o});u.pageX=n.pageX,u.pageY=n.pageY;var f=ut(s,o,r);f&&(f.pageX=parseInt(f.series.xaxis.p2c(f.datapoint[0])+i.left+m.left,10),f.pageY=parseInt(f.series.yaxis.p2c(f.datapoint[1])+i.top+m.top,10));if(a.grid.autoHighlight){for(var l=0;l<st.length;++l){var h=st[l];h.auto==e&&(!f||h.series!=f.series||h.point[0]!=f.datapoint[0]||h.point[1]!=f.datapoint[1])&&vt(h.series,h.point)}f&&dt(f.series,f.datapoint,e)}t.trigger(e,[u,f])}function ht(){var e=a.interaction.redrawOverlayInterval;if(e==-1){pt();return}ot||(ot=setTimeout(pt,e))}function pt(){ot=null,p.save(),l.clear(),p.translate(m.left,m.top);var e,t;for(e=0;e<st.length;++e)t=st[e],t.series.bars.show?yt(t.series,t.point):gt(t.series,t.point);p.restore(),E(b.drawOverlay,[p])}function dt(e,t,n){typeof e=="number"&&(e=u[e]);if(typeof t=="number"){var r=e.datapoints.pointsize;t=e.datapoints.points.slice(r*t,r*(t+1))}var i=mt(e,t);i==-1?(st.push({series:e,point:t,auto:n}),ht()):n||(st[i].auto=!1)}function vt(e,t){if(e==null&&t==null){st=[],ht();return}typeof e=="number"&&(e=u[e]);if(typeof t=="number"){var n=e.datapoints.pointsize;t=e.datapoints.points.slice(n*t,n*(t+1))}var r=mt(e,t);r!=-1&&(st.splice(r,1),ht())}function mt(e,t){for(var n=0;n<st.length;++n){var r=st[n];if(r.series==e&&r.point[0]==t[0]&&r.point[1]==t[1])return n}return-1}function gt(t,n){var r=n[0],i=n[1],s=t.xaxis,o=t.yaxis,u=typeof t.highlightColor=="string"?t.highlightColor:e.color.parse(t.color).scale("a",.5).toString();if(r<s.min||r>s.max||i<o.min||i>o.max)return;var a=t.points.radius+t.points.lineWidth/2;p.lineWidth=a,p.strokeStyle=u;var f=1.5*a;r=s.p2c(r),i=o.p2c(i),p.beginPath(),t.points.symbol=="circle"?p.arc(r,i,f,0,2*Math.PI,!1):t.points.symbol(p,r,i,f,!1),p.closePath(),p.stroke()}function yt(t,n){var r=typeof t.highlightColor=="string"?t.highlightColor:e.color.parse(t.color).scale("a",.5).toString(),i=r,s=t.bars.align=="left"?0:-t.bars.barWidth/2;p.lineWidth=t.bars.lineWidth,p.strokeStyle=r,tt(n[0],n[1],n[2]||0,s,s+t.bars.barWidth,0,function(){return i},t.xaxis,t.yaxis,p,t.bars.horizontal,t.bars.lineWidth)}function bt(t,n,r,i){if(typeof t=="string")return t;var s=h.createLinearGradient(0,r,0,n);for(var o=0,u=t.colors.length;o<u;++o){var a=t.colors[o];if(typeof a!="string"){var f=e.color.parse(i);a.brightness!=null&&(f=f.scale("rgb",a.brightness)),a.opacity!=null&&(f.a*=a.opacity),a=f.toString()}s.addColorStop(o/(u-1),a)}return s}var u=[],a={colors:["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"],legend:{show:!0,noColumns:1,labelFormatter:null,labelBoxBorderColor:"#ccc",container:null,position:"ne",margin:5,backgroundColor:null,backgroundOpacity:.85,sorted:null},xaxis:{show:null,position:"bottom",mode:null,font:null,color:null,tickColor:null,transform:null,inverseTransform:null,min:null,max:null,autoscaleMargin:null,ticks:null,tickFormatter:null,labelWidth:null,labelHeight:null,reserveSpace:null,tickLength:null,alignTicksWithAxis:null,tickDecimals:null,tickSize:null,minTickSize:null},yaxis:{autoscaleMargin:.02,position:"left"},xaxes:[],yaxes:[],series:{points:{show:!1,radius:3,lineWidth:2,fill:!0,fillColor:"#ffffff",symbol:"circle"},lines:{lineWidth:2,fill:!1,fillColor:null,steps:!1},bars:{show:!1,lineWidth:2,barWidth:1,fill:!0,fillColor:null,align:"left",horizontal:!1,zero:!0},shadowSize:3,highlightColor:null},grid:{show:!0,aboveData:!1,color:"#545454",backgroundColor:null,borderColor:null,tickColor:null,margin:0,labelMargin:5,axisMargin:8,borderWidth:2,minBorderMargin:null,markings:null,markingsColor:"#f4f4f4",markingsLineWidth:2,clickable:!1,hoverable:!1,autoHighlight:!0,mouseActiveRadius:10},interaction:{redrawOverlayInterval:1e3/60},hooks:{}},f=null,l=null,c=null,h=null,p=null,d=[],v=[],m={left:0,right:0,top:0,bottom
          : 0
          }, g = 0, y = 0, b = { processOptions: [], processRawData: [], processDatapoints: [], processOffset: [], drawBackground: [], drawSeries: [], draw: [], bindEvents: [], drawOverlay: [], shutdown: [] }, w = this; w.setData = T, w.setupGrid = R, w.draw = V, w.getPlaceholder = function () { return t }, w.getCanvas = function () { return f.element }, w.getPlotOffset = function () { return m }, w.width = function () { return g }, w.height = function () { return y }, w.offset = function () { var e = c.offset(); return e.left += m.left, e.top += m.top, e }, w.getData = function () { return u }, w.getAxes = function () { var t = {}, n; return e.each(d.concat(v), function (e, n) { n && (t[n.direction + (n.n != 1 ? n.n : "") + "axis"] = n) }), t }, w.getXAxes = function () { return d }, w.getYAxes = function () { return v }, w.c2p = L, w.p2c = A, w.getOptions = function () { return a }, w.highlight = dt, w.unhighlight = vt, w.triggerRedrawOverlay = ht, w.pointOffset = function (e) { return { left: parseInt(d[C(e, "x") - 1].p2c(+e.x) + m.left, 10), top: parseInt(v[C(e, "y") - 1].p2c(+e.y) + m.top, 10) } }, w.shutdown = H, w.resize = function () { var e = t.width(), n = t.height(); f.resize(e, n), l.resize(e, n) }, w.hooks = b, S(w), x(s), D(), T(r), R(), V(), P(); var st = [], ot = null
          } function i(e, t) { return t * Math.floor(e / t) } var t = Object.prototype.hasOwnProperty; n.prototype.resize = function (e, t) { if (e <= 0 || t <= 0) throw new Error("Invalid dimensions for plot, width = " + e + ", height = " + t); var n = this.element, r = this.context, i = this.pixelRatio; this.width != e && (n.width = e * i, n.style.width = e + "px", this.width = e), this.height != t && (n.height = t * i, n.style.height = t + "px", this.height = t), r.restore(), r.save(), r.scale(i, i) }, n.prototype.clear = function () { this.context.clearRect(0, 0, this.width, this.height) }, n.prototype.render = function () { var e = this._textCache; for (var n in e) if (t.call(e, n)) { var r = this.getTextLayer(n), i = e[n]; r.hide(); for (var s in i) if (t.call(i, s)) { var o = i[s]; for (var u in o) if (t.call(o, u)) { var a = o[u].positions; for (var f = 0, l; l = a[f]; f++) l.active ? l.rendered || (r.append(l.element), l.rendered = !0) : (a.splice(f--, 1), l.rendered && l.element.detach()); a.length == 0 && delete o[u] } } r.show() } }, n.prototype.getTextLayer = function (t) { var n = this.text[t]; return n == null && (this.textContainer == null && (this.textContainer = e("<div class='flot-text'></div>").css({ position: "absolute", top: 0, left: 0, bottom: 0, right: 0, "font-size": "smaller", color: "#545454" }).insertAfter(this.element)), n = this.text[t] = e("<div></div>").addClass(t).css({ position: "absolute", top: 0, left: 0, bottom: 0, right: 0 }).appendTo(this.textContainer)), n }, n.prototype.getTextInfo = function (t, n, r, i, s) { var o, u, a, f; n = "" + n, typeof r == "object" ? o = r.style + " " + r.variant + " " + r.weight + " " + r.size + "px/" + r.lineHeight + "px " + r.family : o = r, u = this._textCache[t], u == null && (u = this._textCache[t] = {}), a = u[o], a == null && (a = u[o] = {}), f = a[n]; if (f == null) { var l = e("<div></div>").html(n).css({ position: "absolute", "max-width": s, top: -9999 }).appendTo(this.getTextLayer(t)); typeof r == "object" ? l.css({ font: o, color: r.color }) : typeof r == "string" && l.addClass(r), f = a[n] = { width: l.outerWidth(!0), height: l.outerHeight(!0), element: l, positions: [] }, l.detach() } return f }, n.prototype.addText = function (e, t, n, r, i, s, o, u, a) { var f = this.getTextInfo(e, r, i, s, o), l = f.positions; u == "center" ? t -= f.width / 2 : u == "right" && (t -= f.width), a == "middle" ? n -= f.height / 2 : a == "bottom" && (n -= f.height); for (var c = 0, h; h = l[c]; c++) if (h.x == t && h.y == n) { h.active = !0; return } h = { active: !0, rendered: !1, element: l.length ? f.element.clone() : f.element, x: t, y: n }, l.push(h), h.element.css({ top: Math.round(n), left: Math.round(t), "text-align": u }) }, n.prototype.removeText = function (e, n, r, i, s, o) { if (i == null) { var u = this._textCache[e]; if (u != null) for (var a in u) if (t.call(u, a)) { var f = u[a]; for (var l in f) if (t.call(f, l)) { var c = f[l].positions; for (var h = 0, p; p = c[h]; h++) p.active = !1 } } } else { var c = this.getTextInfo(e, i, s, o).positions; for (var h = 0, p; p = c[h]; h++) p.x == n && p.y == r && (p.active = !1) } }, e.plot = function (t, n, i) { var s = new r(e(t), n, i, e.plot.plugins); return s }, e.plot.version = "0.8.1", e.plot.plugins = [], e.fn.plot = function (t, n) { return this.each(function () { e.plot(this, t, n) }) }
          }(jQuery);


          !function (s) { function n(s) { function n(s, n) { for (var t = null, i = 0; i < n.length && s != n[i]; ++i) n[i].stack == s.stack && (t = n[i]); return t } function t(s, t, i) { if (null != t.stack && t.stack !== !1) { var l = n(t, s.getData()); if (l) { for (var o, e, f, u, a, r, p, h, c = i.pointsize, g = i.points, k = l.datapoints.pointsize, v = l.datapoints.points, m = [], z = t.lines.show, b = t.bars.horizontal, d = c > 2 && (b ? i.format[2].x : i.format[2].y), y = z && t.lines.steps, D = !0, j = b ? 1 : 0, w = b ? 0 : 1, x = 0, Q = 0; ;) { if (x >= g.length) break; if (p = m.length, null == g[x]) { for (h = 0; c > h; ++h) m.push(g[x + h]); x += c } else if (Q >= v.length) { if (!z) for (h = 0; c > h; ++h) m.push(g[x + h]); x += c } else if (null == v[Q]) { for (h = 0; c > h; ++h) m.push(null); D = !0, Q += k } else { if (o = g[x + j], e = g[x + w], u = v[Q + j], a = v[Q + w], r = 0, o == u) { for (h = 0; c > h; ++h) m.push(g[x + h]); m[p + w] += a, r = a, x += c, Q += k } else if (o > u) { if (z && x > 0 && null != g[x - c]) { for (f = e + (g[x - c + w] - e) * (u - o) / (g[x - c + j] - o), m.push(u), m.push(f + a), h = 2; c > h; ++h) m.push(g[x + h]); r = a } Q += k } else { if (D && z) { x += c; continue } for (h = 0; c > h; ++h) m.push(g[x + h]); z && Q > 0 && null != v[Q - k] && (r = a + (v[Q - k + w] - a) * (o - u) / (v[Q - k + j] - u)), m[p + w] += r, x += c } D = !1, p != m.length && d && (m[p + 2] += r) } if (y && p != m.length && p > 0 && null != m[p] && m[p] != m[p - c] && m[p + 1] != m[p - c + 1]) { for (h = 0; c > h; ++h) m[p + c + h] = m[p + h]; m[p + 1] = m[p - c + 1] } } i.points = m } } } s.hooks.processDatapoints.push(t) } var t = { series: { stack: null } }; s.plot.plugins.push({ init: n, options: t, name: "stack", version: "1.2" }) }(jQuery);


          !function (e) { function i(i) { function a(i) { y || (y = !0, w = i.getCanvas(), k = e(w).parent(), r = i.getOptions(), i.setData(l(i.getData()))) } function l(i) { for (var s = 0, t = 0, a = 0, l = r.series.pie.combine.color, n = [], o = 0; o < i.length; ++o) { var p = i[o].data; e.isArray(p) && 1 == p.length && (p = p[0]), e.isArray(p) ? p[1] = !isNaN(parseFloat(p[1])) && isFinite(p[1]) ? +p[1] : 0 : p = !isNaN(parseFloat(p)) && isFinite(p) ? [1, +p] : [1, 0], i[o].data = [p] } for (var o = 0; o < i.length; ++o) s += i[o].data[0][1]; for (var o = 0; o < i.length; ++o) { var p = i[o].data[0][1]; p / s <= r.series.pie.combine.threshold && (t += p, a++, l || (l = i[o].color)) } for (var o = 0; o < i.length; ++o) { var p = i[o].data[0][1]; (2 > a || p / s > r.series.pie.combine.threshold) && n.push({ data: [[1, p]], color: i[o].color, label: i[o].label, angle: 2 * p * Math.PI / s, percent: p / (s / 100) }) } return a > 1 && n.push({ data: [[1, t]], color: l, label: r.series.pie.combine.label, angle: 2 * t * Math.PI / s, percent: t / (s / 100) }), n } function n(i, a) { function l() { m.clearRect(0, 0, h, g), k.children().filter(".pieLabel, .pieLabelBackground").remove() } function n() { var e = r.series.pie.shadow.left, i = r.series.pie.shadow.top, s = 10, t = r.series.pie.shadow.alpha, a = r.series.pie.radius > 1 ? r.series.pie.radius : M * r.series.pie.radius; if (!(a >= h / 2 - e || a * r.series.pie.tilt >= g / 2 - i || s >= a)) { m.save(), m.translate(e, i), m.globalAlpha = t, m.fillStyle = "#000", m.translate(P, A), m.scale(1, r.series.pie.tilt); for (var l = 1; s >= l; l++) m.beginPath(), m.arc(0, 0, a, 0, 2 * Math.PI, !1), m.fill(), a -= l; m.restore() } } function p() { function i(e, i, s) { 0 >= e || isNaN(e) || (s ? m.fillStyle = i : (m.strokeStyle = i, m.lineJoin = "round"), m.beginPath(), Math.abs(e - 2 * Math.PI) > 1e-9 && m.moveTo(0, 0), m.arc(0, 0, a, l, l + e / 2, !1), m.arc(0, 0, a, l + e / 2, l + e, !1), m.closePath(), l += e, s ? m.fill() : m.stroke()) } function s() { function i(i, s, t) { if (0 == i.data[0][1]) return !0; var l, n = r.legend.labelFormatter, o = r.series.pie.label.formatter; l = n ? n(i.label, i) : i.label, o && (l = o(l, i)); var p = (s + i.angle + s) / 2, c = P + Math.round(Math.cos(p) * a), u = A + Math.round(Math.sin(p) * a) * r.series.pie.tilt, d = "<span class='pieLabel' id='pieLabel" + t + "' style='position:absolute;top:" + u + "px;left:" + c + "px;'>" + l + "</span>"; k.append(d); var f = k.children("#pieLabel" + t), v = u - f.height() / 2, b = c - f.width() / 2; if (f.css("top", v), f.css("left", b), 0 - v > 0 || 0 - b > 0 || g - (v + f.height()) < 0 || h - (b + f.width()) < 0) return !1; if (0 != r.series.pie.label.background.opacity) { var w = r.series.pie.label.background.color; null == w && (w = i.color); var M = "top:" + v + "px;left:" + b + "px;"; e("<div class='pieLabelBackground' style='position:absolute;width:" + f.width() + "px;height:" + f.height() + "px;" + M + "background-color:" + w + ";'></div>").css("opacity", r.series.pie.label.background.opacity).insertBefore(f) } return !0 } for (var s = t, a = r.series.pie.label.radius > 1 ? r.series.pie.label.radius : M * r.series.pie.label.radius, l = 0; l < u.length; ++l) { if (u[l].percent >= 100 * r.series.pie.label.threshold && !i(u[l], s, l)) return !1; s += u[l].angle } return !0 } var t = Math.PI * r.series.pie.startAngle, a = r.series.pie.radius > 1 ? r.series.pie.radius : M * r.series.pie.radius; m.save(), m.translate(P, A), m.scale(1, r.series.pie.tilt), m.save(); for (var l = t, n = 0; n < u.length; ++n) u[n].startAngle = l, i(u[n].angle, u[n].color, !0); if (m.restore(), r.series.pie.stroke.width > 0) { m.save(), m.lineWidth = r.series.pie.stroke.width, l = t; for (var n = 0; n < u.length; ++n) i(u[n].angle, r.series.pie.stroke.color, !1); m.restore() } return o(m), m.restore(), r.series.pie.label.show ? s() : !0 } if (k) { var h = i.getPlaceholder().width(), g = i.getPlaceholder().height(), c = k.children().filter(".legend").children().width() || 0; m = a, y = !1, M = Math.min(h, g / r.series.pie.tilt) / 2, A = g / 2 + r.series.pie.offset.top, P = h / 2, "auto" == r.series.pie.offset.left ? r.legend.position.match("w") ? P += c / 2 : P -= c / 2 : P += r.series.pie.offset.left, M > P ? P = M : P > h - M && (P = h - M); var u = i.getData(), d = 0; do d > 0 && (M *= t), d += 1, l(), r.series.pie.tilt <= .8 && n(); while (!p() && s > d); d >= s && (l(), k.prepend("<div class='error'>Could not draw pie with labels contained inside canvas</div>")), i.setSeries && i.insertLegend && (i.setSeries(u), i.insertLegend()) } } function o(e) { if (r.series.pie.innerRadius > 0) { e.save(); var i = r.series.pie.innerRadius > 1 ? r.series.pie.innerRadius : M * r.series.pie.innerRadius; e.globalCompositeOperation = "destination-out", e.beginPath(), e.fillStyle = r.series.pie.stroke.color, e.arc(0, 0, i, 0, 2 * Math.PI, !1), e.fill(), e.closePath(), e.restore(), e.save(), e.beginPath(), e.strokeStyle = r.series.pie.stroke.color, e.arc(0, 0, i, 0, 2 * Math.PI, !1), e.stroke(), e.closePath(), e.restore() } } function p(e, i) { for (var s = !1, t = -1, r = e.length, a = r - 1; ++t < r; a = t) (e[t][1] <= i[1] && i[1] < e[a][1] || e[a][1] <= i[1] && i[1] < e[t][1]) && i[0] < (e[a][0] - e[t][0]) * (i[1] - e[t][1]) / (e[a][1] - e[t][1]) + e[t][0] && (s = !s); return s } function h(e, s) { for (var t, r, a = i.getData(), l = i.getOptions(), n = l.series.pie.radius > 1 ? l.series.pie.radius : M * l.series.pie.radius, o = 0; o < a.length; ++o) { var h = a[o]; if (h.pie.show) { if (m.save(), m.beginPath(), m.moveTo(0, 0), m.arc(0, 0, n, h.startAngle, h.startAngle + h.angle / 2, !1), m.arc(0, 0, n, h.startAngle + h.angle / 2, h.startAngle + h.angle, !1), m.closePath(), t = e - P, r = s - A, m.isPointInPath) { if (m.isPointInPath(e - P, s - A)) return m.restore(), { datapoint: [h.percent, h.data], dataIndex: 0, series: h, seriesIndex: o } } else { var g = n * Math.cos(h.startAngle), c = n * Math.sin(h.startAngle), u = n * Math.cos(h.startAngle + h.angle / 4), d = n * Math.sin(h.startAngle + h.angle / 4), f = n * Math.cos(h.startAngle + h.angle / 2), v = n * Math.sin(h.startAngle + h.angle / 2), b = n * Math.cos(h.startAngle + h.angle / 1.5), w = n * Math.sin(h.startAngle + h.angle / 1.5), k = n * Math.cos(h.startAngle + h.angle), y = n * Math.sin(h.startAngle + h.angle), I = [[0, 0], [g, c], [u, d], [f, v], [b, w], [k, y]], O = [t, r]; if (p(I, O)) return m.restore(), { datapoint: [h.percent, h.data], dataIndex: 0, series: h, seriesIndex: o } } m.restore() } } return null } function g(e) { u("plothover", e) } function c(e) { u("plotclick", e) } function u(e, s) { var t = i.offset(), a = parseInt(s.pageX - t.left), l = parseInt(s.pageY - t.top), n = h(a, l); if (r.grid.autoHighlight) for (var o = 0; o < I.length; ++o) { var p = I[o]; p.auto != e || n && p.series == n.series || f(p.series) } n && d(n.series, e); var g = { pageX: s.pageX, pageY: s.pageY }; k.trigger(e, [g, n]) } function d(e, s) { var t = v(e); -1 == t ? (I.push({ series: e, auto: s }), i.triggerRedrawOverlay()) : s || (I[t].auto = !1) } function f(e) { null == e && (I = [], i.triggerRedrawOverlay()); var s = v(e); -1 != s && (I.splice(s, 1), i.triggerRedrawOverlay()) } function v(e) { for (var i = 0; i < I.length; ++i) { var s = I[i]; if (s.series == e) return i } return -1 } function b(e, i) { function s(e) { e.angle <= 0 || isNaN(e.angle) || (i.fillStyle = "rgba(255, 255, 255, " + t.series.pie.highlight.opacity + ")", i.beginPath(), Math.abs(e.angle - 2 * Math.PI) > 1e-9 && i.moveTo(0, 0), i.arc(0, 0, r, e.startAngle, e.startAngle + e.angle / 2, !1), i.arc(0, 0, r, e.startAngle + e.angle / 2, e.startAngle + e.angle, !1), i.closePath(), i.fill()) } var t = e.getOptions(), r = t.series.pie.radius > 1 ? t.series.pie.radius : M * t.series.pie.radius; i.save(), i.translate(P, A), i.scale(1, t.series.pie.tilt); for (var a = 0; a < I.length; ++a) s(I[a].series); o(i), i.restore() } var w = null, k = null, M = null, P = null, A = null, y = !1, m = null, I = []; i.hooks.processOptions.push(function (e, i) { i.series.pie.show && (i.grid.show = !1, "auto" == i.series.pie.label.show && (i.series.pie.label.show = i.legend.show ? !1 : !0), "auto" == i.series.pie.radius && (i.series.pie.radius = i.series.pie.label.show ? .75 : 1), i.series.pie.tilt > 1 ? i.series.pie.tilt = 1 : i.series.pie.tilt < 0 && (i.series.pie.tilt = 0)) }), i.hooks.bindEvents.push(function (e, i) { var s = e.getOptions(); s.series.pie.show && (s.grid.hoverable && i.unbind("mousemove").mousemove(g), s.grid.clickable && i.unbind("click").click(c)) }), i.hooks.processDatapoints.push(function (e, i, s, t) { var r = e.getOptions(); r.series.pie.show && a(e, i, s, t) }), i.hooks.drawOverlay.push(function (e, i) { var s = e.getOptions(); s.series.pie.show && b(e, i) }), i.hooks.draw.push(function (e, i) { var s = e.getOptions(); s.series.pie.show && n(e, i) }) } var s = 10, t = .95, r = { series: { pie: { show: !1, radius: "auto", innerRadius: 0, startAngle: 1.5, tilt: 1, shadow: { left: 5, top: 15, alpha: .02 }, offset: { top: 0, left: "auto" }, stroke: { color: "#fff", width: 1 }, label: { show: "auto", formatter: function (e, i) { return "<div style='font-size:x-small;text-align:center;padding:2px;color:" + i.color + ";'>" + e + "<br/>" + Math.round(i.percent) + "%</div>" }, radius: 1, background: { color: null, opacity: 0 }, threshold: 0 }, combine: { threshold: -1, color: null, label: "Other" }, highlight: { opacity: .5 } } } }; e.plot.plugins.push({ init: i, options: r, name: "pie", version: "1.1" }) }(jQuery);

          !function (r) { function n(r) { function n(r, n, e) { var i = null; if (t(n) && (l(n), a(r), o(r), s(n), v >= 2)) { var u = h(n), p = -1, w = f(); p = c(u) ? -1 * d(g, u - 1, Math.floor(v / 2) - 1) - w : d(g, Math.ceil(v / 2), u - 2) + w + 2 * W, i = b(e, n, p), e.points = i } return i } function t(r) { return null != r.bars && r.bars.show && null != r.bars.order } function a(r) { var n = D ? r.getPlaceholder().innerHeight() : r.getPlaceholder().innerWidth(), t = D ? e(r.getData(), 1) : e(r.getData(), 0), a = t[1] - t[0]; w = a / n } function e(r, n) { for (var t = new Array, a = 0; a < r.length; a++) t[0] = r[a].data[0][n], t[1] = r[a].data[r[a].data.length - 1][n]; return t } function o(r) { g = i(r.getData()), v = g.length } function i(r) { for (var n = new Array, t = 0; t < r.length; t++) null != r[t].bars.order && r[t].bars.show && n.push(r[t]); return n.sort(u) } function u(r, n) { var t = r.bars.order, a = n.bars.order; return a > t ? -1 : t > a ? 1 : 0 } function s(r) { p = r.bars.lineWidth ? r.bars.lineWidth : 2, W = p * w } function l(r) { r.bars.horizontal && (D = !0) } function h(r) { for (var n = 0, t = 0; t < g.length; ++t) if (r == g[t]) { n = t; break } return n + 1 } function f() { var r = 0; return 0 != v % 2 && (r = g[Math.ceil(v / 2)].bars.barWidth / 2), r } function c(r) { return r <= Math.ceil(v / 2) } function d(r, n, t) { for (var a = 0, e = n; t >= e; e++) a += r[e].bars.barWidth + 2 * W; return a } function b(r, n, t) { for (var a = r.pointsize, e = r.points, o = 0, i = D ? 1 : 0; i < e.length; i += a) e[i] += t, n.data[o][3] = e[i], o++; return e } var g, v, p, W, w = 1, D = !1; r.hooks.processDatapoints.push(n) } var t = { series: { bars: { order: null } } }; r.plot.plugins.push({ init: n, options: t, name: "orderBars", version: "0.2" }) }(jQuery);


          (function ($, window, undefined) {
              '$:nomunge'; // Used by YUI compressor.

              // A jQuery object containing all non-window elements to which the resize
              // event is bound.
              var elems = $([]),

                // Extend $.resize if it already exists, otherwise create it.
                jq_resize = $.resize = $.extend($.resize, {}),

                timeout_id,

                // Reused strings.
                str_setTimeout = 'setTimeout',
                str_resize = 'resize',
                str_data = str_resize + '-special-event',
                str_delay = 'delay',
                str_throttle = 'throttleWindow';

              // Property: jQuery.resize.delay
              // 
              // The numeric interval (in milliseconds) at which the resize event polling
              // loop executes. Defaults to 250.

              jq_resize[str_delay] = 250;

              // Property: jQuery.resize.throttleWindow
              // 
              // Throttle the native window object resize event to fire no more than once
              // every <jQuery.resize.delay> milliseconds. Defaults to true.
              // 
              // Because the window object has its own resize event, it doesn't need to be
              // provided by this plugin, and its execution can be left entirely up to the
              // browser. However, since certain browsers fire the resize event continuously
              // while others do not, enabling this will throttle the window resize event,
              // making event behavior consistent across all elements in all browsers.
              // 
              // While setting this property to false will disable window object resize
              // event throttling, please note that this property must be changed before any
              // window object resize event callbacks are bound.

              jq_resize[str_throttle] = true;

              // Event: resize event
              // 
              // Fired when an element's width or height changes. Because browsers only
              // provide this event for the window element, for other elements a polling
              // loop is initialized, running every <jQuery.resize.delay> milliseconds
              // to see if elements' dimensions have changed. You may bind with either
              // .resize( fn ) or .bind( "resize", fn ), and unbind with .unbind( "resize" ).
              // 
              // Usage:
              // 
              // > jQuery('selector').bind( 'resize', function(e) {
              // >   // element's width or height has changed!
              // >   ...
              // > });
              // 
              // Additional Notes:
              // 
              // * The polling loop is not created until at least one callback is actually
              //   bound to the 'resize' event, and this single polling loop is shared
              //   across all elements.
              // 
              // Double firing issue in jQuery 1.3.2:
              // 
              // While this plugin works in jQuery 1.3.2, if an element's event callbacks
              // are manually triggered via .trigger( 'resize' ) or .resize() those
              // callbacks may double-fire, due to limitations in the jQuery 1.3.2 special
              // events system. This is not an issue when using jQuery 1.4+.
              // 
              // > // While this works in jQuery 1.4+
              // > $(elem).css({ width: new_w, height: new_h }).resize();
              // > 
              // > // In jQuery 1.3.2, you need to do this:
              // > var elem = $(elem);
              // > elem.css({ width: new_w, height: new_h });
              // > elem.data( 'resize-special-event', { width: elem.width(), height: elem.height() } );
              // > elem.resize();

              $.event.special[str_resize] = {

                  // Called only when the first 'resize' event callback is bound per element.
                  setup: function () {
                      // Since window has its own native 'resize' event, return false so that
                      // jQuery will bind the event using DOM methods. Since only 'window'
                      // objects have a .setTimeout method, this should be a sufficient test.
                      // Unless, of course, we're throttling the 'resize' event for window.
                      if (!jq_resize[str_throttle] && this[str_setTimeout]) { return false; }

                      var elem = $(this);

                      // Add this element to the list of internal elements to monitor.
                      elems = elems.add(elem);

                      // Initialize data store on the element.
                      $.data(this, str_data, { w: elem.width(), h: elem.height() });

                      // If this is the first element added, start the polling loop.
                      if (elems.length === 1) {
                          loopy();
                      }
                  },

                  // Called only when the last 'resize' event callback is unbound per element.
                  teardown: function () {
                      // Since window has its own native 'resize' event, return false so that
                      // jQuery will unbind the event using DOM methods. Since only 'window'
                      // objects have a .setTimeout method, this should be a sufficient test.
                      // Unless, of course, we're throttling the 'resize' event for window.
                      if (!jq_resize[str_throttle] && this[str_setTimeout]) { return false; }

                      var elem = $(this);

                      // Remove this element from the list of internal elements to monitor.
                      elems = elems.not(elem);

                      // Remove any data stored on the element.
                      elem.removeData(str_data);

                      // If this is the last element removed, stop the polling loop.
                      if (!elems.length) {
                          clearTimeout(timeout_id);
                      }
                  },

                  // Called every time a 'resize' event callback is bound per element (new in
                  // jQuery 1.4).
                  add: function (handleObj) {
                      // Since window has its own native 'resize' event, return false so that
                      // jQuery doesn't modify the event object. Unless, of course, we're
                      // throttling the 'resize' event for window.
                      if (!jq_resize[str_throttle] && this[str_setTimeout]) { return false; }

                      var old_handler;

                      // The new_handler function is executed every time the event is triggered.
                      // This is used to update the internal element data store with the width
                      // and height when the event is triggered manually, to avoid double-firing
                      // of the event callback. See the "Double firing issue in jQuery 1.3.2"
                      // comments above for more information.

                      function new_handler(e, w, h) {
                          // console.log($.data( this, str_data ));
                          var elem = $(this),
                            data = $.data(this, str_data);

                          // If called from the polling loop, w and h will be passed in as
                          // arguments. If called manually, via .trigger( 'resize' ) or .resize(),
                          // those values will need to be computed.
                          if (!data) {
                              $.data(this, str_data, { w: elem.width(), h: elem.height() });
                          }
                          data.w = w !== undefined ? w : elem.width();
                          data.h = h !== undefined ? h : elem.height();

                          old_handler.apply(this, arguments);
                      };

                      // This may seem a little complicated, but it normalizes the special event
                      // .add method between jQuery 1.4/1.4.1 and 1.4.2+
                      if ($.isFunction(handleObj)) {
                          // 1.4, 1.4.1
                          old_handler = handleObj;
                          return new_handler;
                      } else {
                          // 1.4.2+
                          old_handler = handleObj.handler;
                          handleObj.handler = new_handler;
                      }
                  }

              };

              function loopy() {

                  // Start the polling loop, asynchronously.
                  timeout_id = window[str_setTimeout](function () {

                      // Iterate over all elements to which the 'resize' event is bound.
                      elems.each(function () {
                          var elem = $(this),
                            width = elem.width(),
                            height = elem.height(),
                            data = $.data(this, str_data);

                          // If element size has changed since the last time, update the element
                          // data store and trigger the 'resize' event.
                          if (width !== data.w || height !== data.h) {
                              elem.trigger(str_resize, [data.w = width, data.h = height]);
                          }

                      });

                      // Loop.
                      loopy();

                  }, jq_resize[str_delay]);

              };

          })(jQuery, this);

          (function ($) {
              var options = {}; // no options

              function init(plot) {
                  function onResize() {
                      var placeholder = plot.getPlaceholder();

                      // somebody might have hidden us and we can't plot
                      // when we don't have the dimensions
                      if (placeholder.width() == 0 || placeholder.height() == 0)
                          return;

                      plot.resize();
                      plot.setupGrid();
                      plot.draw();
                  }

                  function bindEvents(plot, eventHolder) {
                      plot.getPlaceholder().resize(onResize);
                      // $(window).resize(onResize);
                  }

                  function shutdown(plot, eventHolder) {
                      plot.getPlaceholder().unbind("resize", onResize);
                      // $(window).unbind("resize", onResize);
                  }

                  plot.hooks.bindEvents.push(bindEvents);
                  plot.hooks.shutdown.push(shutdown);
              }

              $.plot.plugins.push({
                  init: init,
                  options: options,
                  name: 'resize',
                  version: '1.0'
              });
          })(jQuery);


          !function (a) { var b = { tooltip: !1, tooltipOpts: { id: "flotTip", content: "%s | X: %x | Y: %y", xDateFormat: null, yDateFormat: null, monthNames: null, dayNames: null, shifts: { x: 10, y: 20 }, defaultTheme: !0, lines: !1, onHover: function () { }, $compat: !1 } }, c = function (a) { this.tipPosition = { x: 0, y: 0 }, this.init(a) }; c.prototype.init = function (b) { function c(a) { var c = {}; c.x = a.pageX, c.y = a.pageY, b.setTooltipPosition(c) } function d(c, d, f) { var g = function (a, b, c, d) { return Math.sqrt((c - a) * (c - a) + (d - b) * (d - b)) }, h = function (a, b, c, d, e, f, h) { if (!h || (h = function (a, b, c, d, e, f) { if ("undefined" != typeof c) return { x: c, y: b }; if ("undefined" != typeof d) return { x: a, y: d }; var g, h = -1 / ((f - d) / (e - c)); return { x: g = (e * (a * h - b + d) + c * (a * -h + b - f)) / (h * (e - c) + d - f), y: h * g - h * a + b } }(a, b, c, d, e, f), h.x >= Math.min(c, e) && h.x <= Math.max(c, e) && h.y >= Math.min(d, f) && h.y <= Math.max(d, f))) { var i = d - f, j = e - c, k = c * f - d * e; return Math.abs(i * a + j * b + k) / Math.sqrt(i * i + j * j) } var l = g(a, b, c, d), m = g(a, b, e, f); return l > m ? m : l }; if (f) b.showTooltip(f, d); else if (e.plotOptions.series.lines.show && e.tooltipOptions.lines === !0) { var i = e.plotOptions.grid.mouseActiveRadius, j = { distance: i + 1 }; a.each(b.getData(), function (a, c) { for (var e = 0, f = -1, i = 1; i < c.data.length; i++) c.data[i - 1][0] <= d.x && c.data[i][0] >= d.x && (e = i - 1, f = i); if (-1 === f) return void b.hideTooltip(); var k = { x: c.data[e][0], y: c.data[e][1] }, l = { x: c.data[f][0], y: c.data[f][1] }, m = h(c.xaxis.p2c(d.x), c.yaxis.p2c(d.y), c.xaxis.p2c(k.x), c.yaxis.p2c(k.y), c.xaxis.p2c(l.x), c.yaxis.p2c(l.y), !1); if (m < j.distance) { var n = g(k.x, k.y, d.x, d.y) < g(d.x, d.y, l.x, l.y) ? e : f, o = (c.datapoints.pointsize, [d.x, k.y + (l.y - k.y) * ((d.x - k.x) / (l.x - k.x))]), p = { datapoint: o, dataIndex: n, series: c, seriesIndex: a }; j = { distance: m, item: p } } }), j.distance < i + 1 ? b.showTooltip(j.item, d) : b.hideTooltip() } else b.hideTooltip() } var e = this, f = a.plot.plugins.length; if (this.plotPlugins = [], f) for (var g = 0; f > g; g++) this.plotPlugins.push(a.plot.plugins[g].name); b.hooks.bindEvents.push(function (b, f) { if (e.plotOptions = b.getOptions(), e.plotOptions.tooltip !== !1 && "undefined" != typeof e.plotOptions.tooltip) { e.tooltipOptions = e.plotOptions.tooltipOpts, e.tooltipOptions.$compat ? (e.wfunc = "width", e.hfunc = "height") : (e.wfunc = "innerWidth", e.hfunc = "innerHeight"); { e.getDomElement() } a(b.getPlaceholder()).bind("plothover", d), a(f).bind("mousemove", c) } }), b.hooks.shutdown.push(function (b, e) { a(b.getPlaceholder()).unbind("plothover", d), a(e).unbind("mousemove", c) }), b.setTooltipPosition = function (b) { var c = e.getDomElement(), d = c.outerWidth() + e.tooltipOptions.shifts.x, f = c.outerHeight() + e.tooltipOptions.shifts.y; b.x - a(window).scrollLeft() > a(window)[e.wfunc]() - d && (b.x -= d), b.y - a(window).scrollTop() > a(window)[e.hfunc]() - f && (b.y -= f), e.tipPosition.x = b.x, e.tipPosition.y = b.y }, b.showTooltip = function (a, c) { var d = e.getDomElement(), f = e.stringFormat(e.tooltipOptions.content, a); d.html(f), b.setTooltipPosition({ x: c.pageX, y: c.pageY }), d.css({ left: e.tipPosition.x + e.tooltipOptions.shifts.x, top: e.tipPosition.y + e.tooltipOptions.shifts.y }).show(), "function" == typeof e.tooltipOptions.onHover && e.tooltipOptions.onHover(a, d) }, b.hideTooltip = function () { e.getDomElement().hide().html("") } }, c.prototype.getDomElement = function () { var b = a("#" + this.tooltipOptions.id); return 0 === b.length && (b = a("<div />").attr("id", this.tooltipOptions.id), b.appendTo("body").hide().css({ position: "absolute" }), this.tooltipOptions.defaultTheme && b.css({ background: "#fff", "z-index": "1040", padding: "0.4em 0.6em", "border-radius": "0.5em", "font-size": "0.8em", border: "1px solid #111", display: "none", "white-space": "nowrap" })), b }, c.prototype.stringFormat = function (a, b) { var c, d, e, f, g = /%p\.{0,1}(\d{0,})/, h = /%s/, i = /%lx/, j = /%ly/, k = /%x\.{0,1}(\d{0,})/, l = /%y\.{0,1}(\d{0,})/, m = "%x", n = "%y", o = "%ct"; if ("undefined" != typeof b.series.threshold ? (c = b.datapoint[0], d = b.datapoint[1], e = b.datapoint[2]) : "undefined" != typeof b.series.lines && b.series.lines.steps ? (c = b.series.datapoints.points[2 * b.dataIndex], d = b.series.datapoints.points[2 * b.dataIndex + 1], e = "") : (c = b.series.data[b.dataIndex][0], d = b.series.data[b.dataIndex][1], e = b.series.data[b.dataIndex][2]), null === b.series.label && b.series.originSeries && (b.series.label = b.series.originSeries.label), "function" == typeof a && (a = a(b.series.label, c, d, b)), "undefined" != typeof b.series.percent ? f = b.series.percent : "undefined" != typeof b.series.percents && (f = b.series.percents[b.dataIndex]), "number" == typeof f && (a = this.adjustValPrecision(g, a, f)), a = "undefined" != typeof b.series.label ? a.replace(h, b.series.label) : a.replace(h, ""), a = this.hasAxisLabel("xaxis", b) ? a.replace(i, b.series.xaxis.options.axisLabel) : a.replace(i, ""), a = this.hasAxisLabel("yaxis", b) ? a.replace(j, b.series.yaxis.options.axisLabel) : a.replace(j, ""), this.isTimeMode("xaxis", b) && this.isXDateFormat(b) && (a = a.replace(k, this.timestampToDate(c, this.tooltipOptions.xDateFormat, b.series.xaxis.options))), this.isTimeMode("yaxis", b) && this.isYDateFormat(b) && (a = a.replace(l, this.timestampToDate(d, this.tooltipOptions.yDateFormat, b.series.yaxis.options))), "number" == typeof c && (a = this.adjustValPrecision(k, a, c)), "number" == typeof d && (a = this.adjustValPrecision(l, a, d)), "undefined" != typeof b.series.xaxis.ticks) { var p; p = this.hasRotatedXAxisTicks(b) ? "rotatedTicks" : "ticks"; var q = b.dataIndex + b.seriesIndex; if (b.series.xaxis[p].length > q && !this.isTimeMode("xaxis", b)) { var r = this.isCategoriesMode("xaxis", b) ? b.series.xaxis[p][q].label : b.series.xaxis[p][q].v; r === c && (a = a.replace(k, b.series.xaxis[p][q].label)) } } if ("undefined" != typeof b.series.yaxis.ticks) for (var s in b.series.yaxis.ticks) if (b.series.yaxis.ticks.hasOwnProperty(s)) { var t = this.isCategoriesMode("yaxis", b) ? b.series.yaxis.ticks[s].label : b.series.yaxis.ticks[s].v; t === d && (a = a.replace(l, b.series.yaxis.ticks[s].label)) } return "undefined" != typeof b.series.xaxis.tickFormatter && (a = a.replace(m, b.series.xaxis.tickFormatter(c, b.series.xaxis).replace(/\$/g, "$$"))), "undefined" != typeof b.series.yaxis.tickFormatter && (a = a.replace(n, b.series.yaxis.tickFormatter(d, b.series.yaxis).replace(/\$/g, "$$"))), e && (a = a.replace(o, e)), a }, c.prototype.isTimeMode = function (a, b) { return "undefined" != typeof b.series[a].options.mode && "time" === b.series[a].options.mode }, c.prototype.isXDateFormat = function () { return "undefined" != typeof this.tooltipOptions.xDateFormat && null !== this.tooltipOptions.xDateFormat }, c.prototype.isYDateFormat = function () { return "undefined" != typeof this.tooltipOptions.yDateFormat && null !== this.tooltipOptions.yDateFormat }, c.prototype.isCategoriesMode = function (a, b) { return "undefined" != typeof b.series[a].options.mode && "categories" === b.series[a].options.mode }, c.prototype.timestampToDate = function (b, c, d) { var e = a.plot.dateGenerator(b, d); return a.plot.formatDate(e, c, this.tooltipOptions.monthNames, this.tooltipOptions.dayNames) }, c.prototype.adjustValPrecision = function (a, b, c) { var d, e = b.match(a); return null !== e && "" !== RegExp.$1 && (d = RegExp.$1, c = c.toFixed(d), b = b.replace(a, c)), b }, c.prototype.hasAxisLabel = function (b, c) { return -1 !== a.inArray(this.plotPlugins, "axisLabels") && "undefined" != typeof c.series[b].options.axisLabel && c.series[b].options.axisLabel.length > 0 }, c.prototype.hasRotatedXAxisTicks = function (b) { return -1 !== a.inArray(this.plotPlugins, "tickRotor") && "undefined" != typeof b.series.xaxis.rotatedTicks }; var d = function (a) { new c(a) }; a.plot.plugins.push({ init: d, options: b, name: "tooltip", version: "0.8.4" }) }(jQuery);


          $(document).ready(function () {

              //Interacting with Data Points example

              var sin = [], cos = [];

              for (var i = 0; i < 14; i += 0.5) {
                  sin.push([i, Math.sin(i)]);
                  cos.push([i, Math.cos(i)]);
              }

              var plot = $.plot($("#sincos"),
                  [{ data: sin, label: "sin(x)" }, { data: cos, label: "cos(x)" }], {
                      series: {

                          shadowSize: 0,
                          lines: {
                              show: true,
                              lineWidth: 1.5,
                              //fill: 0.1,
                              //fillColor: { colors: [ { opacity: 0.05 }, { opacity: 0.01 }, { opacity: 0.05 } ] }
                          },
                          points: { show: true }
                      },
                      grid: {
                          //backgroundColor: {colors: ['rgba(0, 0, 0, 0.04)', 'rgba(0, 0, 0, 0)']},
                          labelMargin: 10,
                          hoverable: true,
                          clickable: true,
                          borderWidth: 1,
                          borderColor: 'rgba(0, 0, 0, 0.06)'
                      },
                      legend: {
                          backgroundColor: '#fff'
                      },
                      yaxis: { min: -1.2, max: 1.2, tickColor: 'rgba(0, 0, 0, 0.06)', font: { color: 'rgba(0, 0, 0, 0.4)' } },
                      xaxis: { tickColor: 'rgba(0, 0, 0, 0.06)', font: { color: 'rgba(0, 0, 0, 0.4)' } },
                      colors: [Utility.getBrandColor('success'), Utility.getBrandColor('inverse')],
                      tooltip: true,
                      tooltipOpts: {
                          content: "x: %x, y: %y"
                      }
                  });

              var previousPoint = null;
              $("#sincos").bind("plothover", function (event, pos, item) {
                  $("#x").text(pos.x.toFixed(2));
                  $("#y").text(pos.y.toFixed(2));
              });

              $("#sincos").bind("plotclick", function (event, pos, item) {
                  if (item) {
                      $("#clickdata").text("You clicked point " + item.dataIndex + " in " + item.series.label + ".");
                      plot.highlight(item.series, item.datapoint);
                  }
              });



              //Multiple

              var d1 = [];
              for (var i = 0; i < 14; i += 0.1)
                  d1.push([i, Math.sin(i)]);

              var d2 = [[0, 3], [4, 8], [8, 5], [9, 13]];

              var d3 = [];
              for (var i = 0; i < 15; i += 1)
                  d3.push([i, Math.cos(i) + 10]);

              var d4 = [];
              for (var i = 0; i < 14; i += 0.01)
                  d4.push([i, Math.sqrt(i * 10)]);

              var d5 = [];
              for (var i = 0; i < 15; i += 1)
                  d5.push([i, Math.sqrt(i)]);

              var d6 = [];
              for (var i = 0; i < 15; i += 1)
                  d6.push([i, Math.sqrt(5 * i + Math.sin(i) + 5)]);

              $.plot($("#multiple"), [

                  {
                      data: d1,
                      lines: { show: true, fill: 0.2, lineWidth: 0.75 },
                      shadowSize: 0,

                  },
                  {
                      data: d2,
                      bars: { show: true, fill: 0.2, lineWidth: 0.75 },
                      shadowSize: 0
                  },
                  {
                      data: d3,
                      points: { show: true, fill: 0, },
                      shadowSize: 0
                  },
                  {
                      data: d4,
                      lines: { show: true, fill: 0, lineWidth: 0.75 },
                      shadowSize: 0
                  },
                  {
                      data: d5,
                      lines: { show: true, fill: 0, lineWidth: 0.75 },
                      points: { show: true, fill: 0.2 },
                      shadowSize: 0
                  },
                  {
                      data: d6,
                      lines: { show: true, steps: true, fill: 0.05, lineWidth: 0.75 },
                      shadowSize: 0
                  },


              ], {
                  grid: {
                      labelMargin: 10,
                      hoverable: true,
                      clickable: true,
                      borderWidth: 1,
                      borderColor: 'rgba(0, 0, 0, 0.06)',
                  },
                  yaxis: { tickColor: 'rgba(0, 0, 0, 0.06)', font: { color: 'rgba(0, 0, 0, 0.4)' } },
                  xaxis: { tickColor: 'rgba(0, 0, 0, 0.06)', font: { color: 'rgba(0, 0, 0, 0.4)' } },
                  colors: [Utility.getBrandColor('midnightblue'), Utility.getBrandColor('danger'), Utility.getBrandColor('indigo'), Utility.getBrandColor('inverse'), Utility.getBrandColor('inverse'), Utility.getBrandColor('midnightblue')],
                  tooltip: true,
                  tooltipOpts: {
                      content: "x: %x, y: %y"
                  }
              });




              // Ordered Bars

              var do1 = [];
              var do2 = [];
              var do3 = [];

              for (var i = 1; i < 11; i++) {
                  do1.push([i, parseInt(Math.random() * 100)]);
                  do2.push([i, parseInt(Math.random() * 100)]);
                  do3.push([i, parseInt(Math.random() * 100)]);
              }


              var dos = new Array();

              dos.push({
                  data: do1,
                  label: "Label 1",
                  bars: {
                      show: true,
                      barWidth: 0.15,
                      order: 1
                  }
              });
              dos.push({
                  data: do2,
                  label: "Label 2",
                  bars: {
                      show: true,
                      barWidth: 0.15,
                      order: 2,
                  }
              });
              dos.push({
                  data: do3,
                  label: "Label 3",
                  bars: {
                      show: true,
                      barWidth: 0.15,
                      order: 3,
                  }
              });

              var variance = $.plot($("#ordered"), dos, {
                  series: {
                      bars: {
                          show: true,
                          lineWidth: 0.75
                      }
                  },
                  grid: {
                      labelMargin: 10,
                      hoverable: true,
                      clickable: true,
                      tickColor: 'rgba(0, 0, 0, 0.06)',
                      borderWidth: 1,
                      borderColor: 'rgba(0, 0, 0, 0.06)'
                  },
                  colors: [Utility.getBrandColor('info'), Utility.getBrandColor('inverse'), Utility.getBrandColor('midnightblue')],
                  tooltip: true,
                  tooltipOpts: {
                      content: "x: %x, y: %y"
                  },
                  xaxis: {
                      autoscaleMargin: 0.05,
                      tickColor: 'rgba(0, 0, 0, 0.06)',
                      //ticks: [[1, "Q1"], [2, "Q2"], [3, "Q3"], [4, "Q4"]],
                      tickDecimals: 0,
                      font: {
                          color: 'rgba(0, 0, 0, 0.4)'
                      }
                  },
                  yaxis: {
                      //ticks: [0, 25, 50, 75, 100, 125, 150],
                      font: {
                          color: 'rgba(0, 0, 0, 0.4)'
                      },
                      // tickFormatter: function (val, axis) {
                      //     return "$" + val + "K";
                      // }
                  },
                  legend: {
                      //labelBoxBorderColor: 'transparent'
                  }
              });





              // We use an inline data source in the example, usually data would
              // be fetched from a server

              var dxta = [],
                  totalPoints = 300;
              var updateInterval = 1000;

              function getRandomData() {

                  if (dxta.length > 0)
                      dxta = dxta.slice(1);

                  // Do a random walk

                  while (dxta.length < totalPoints) {

                      var prev = dxta.length > 0 ? dxta[dxta.length - 1] : 50,
                          y = prev + Math.random() * 10 - 5;

                      if (y < 0) {
                          y = 0;
                      } else if (y > 100) {
                          y = 100;
                      }

                      dxta.push(y);
                  }

                  // Zip the generated y values with the x values

                  var res = [];
                  for (var i = 0; i < dxta.length; ++i) {
                      res.push([i, dxta[i]])
                  }

                  return res;
              }

              var plot = $.plot("#realtime-updates", [getRandomData()], {
                  series: {
                      lines: {
                          show: true,
                          lineWidth: 0.75,
                          fill: 0.15,
                          fillColor: { colors: [{ opacity: 0.01 }, { opacity: 0.3 }] }
                      },
                      shadowSize: 0   // Drawing is faster without shadows
                  },
                  grid: {
                      labelMargin: 10,
                      hoverable: true,
                      clickable: true,
                      borderWidth: 1,
                      borderColor: 'rgba(0, 0, 0, 0.06)'
                  },
                  yaxis: {
                      min: 0,
                      max: 100,
                      tickColor: 'rgba(0, 0, 0, 0.06)',
                      font: { color: 'rgba(0, 0, 0, 0.4)' }
                  },
                  xaxis: {
                      show: false
                  },
                  colors: ["#95a5a6"],
                  tooltip: true,
                  tooltipOpts: {
                      content: "CPU Utilization: %y%"
                  }

              });

              function update() {

                  plot.setData([getRandomData()]);

                  // Since the axes don't change, we don't need to call plot.setupGrid()

                  plot.draw();
                  setTimeout(update, updateInterval);
              }

              update();








              var d1 = [];
              for (var i = 0; i <= 10; i += 1) {
                  d1.push([i, parseInt(Math.random() * 30)]);
              }

              var d2 = [];
              for (var i = 0; i <= 10; i += 1) {
                  d2.push([i, parseInt(Math.random() * 30)]);
              }

              var d3 = [];
              for (var i = 0; i <= 10; i += 1) {
                  d3.push([i, parseInt(Math.random() * 30)]);
              }

              var stack = 0,
                  bars = true,
                  lines = false,
                  steps = false;

              function plotWithOptions() {
                  $.plot("#stacking", [d1, d2, d3], {
                      series: {
                          shadowSize: 0,
                          stack: stack,
                          lines: {
                              show: lines,
                              fill: 0.2,
                              steps: steps,
                              lineWidth: 0.75
                          },
                          bars: {
                              show: bars,
                              barWidth: 0.3,
                              lineWidth: 0.75
                          }
                      },
                      grid: {
                          labelMargin: 10,
                          hoverable: true,
                          clickable: true,
                          borderWidth: 1,
                          borderColor: 'rgba(0, 0, 0, 0.06)'
                      },
                      yaxis: { tickColor: 'rgba(0, 0, 0, 0.06)', font: { color: 'rgba(0, 0, 0, 0.4)' } },
                      xaxis: { tickColor: 'rgba(0, 0, 0, 0.06)', font: { color: 'rgba(0, 0, 0, 0.4)' } },
                      colors: [Utility.getBrandColor('midnightblue'), Utility.getBrandColor('info'), Utility.getBrandColor('success')],
                      tooltip: true,
                      tooltipOpts: {
                          content: "X: %x | Y: %y"
                      }

                  });
              }

              plotWithOptions();

              $(".stackControls button").click(function (e) {
                  e.preventDefault();
                  stack = $(this).text() == "With stacking" ? true : null;
                  plotWithOptions();
              });

              $(".graphControls button").click(function (e) {
                  e.preventDefault();
                  bars = $(this).text().indexOf("Bars") != -1;
                  lines = $(this).text().indexOf("Lines") != -1;
                  steps = $(this).text().indexOf("steps") != -1;
                  plotWithOptions();
              });





              // data
              var datax = [
                  { label: "Series1", data: 10, color: Utility.getBrandColor('danger') },
                  { label: "Series2", data: 30, color: Utility.getBrandColor('warning') },
                  { label: "Series3", data: 90, color: Utility.getBrandColor('midnightblue') },
                  { label: "Series4", data: 70, color: Utility.getBrandColor('info') },
                  { label: "Series5", data: 80, color: Utility.getBrandColor('success') },
                  { label: "Series6", data: 110, color: Utility.getBrandColor('inverse') }
              ];


              //    for( var i = 0; i<series; i++)
              //    var series = Math.floor(Math.random()*10)+1;
              // /   {
              //        datax[i] = { label: "Series"+(i+1), data: Math.floor(Math.random()*100)+1 }
              //    }

              $.plot($("#graph0"), datax,
                  {
                      series: {
                          pie: {
                              show: true
                          }
                      },
                      grid: {
                          hoverable: true
                      },
                      tooltip: true,
                      tooltipOpts: {
                          content: "%p.0%, %s"
                      }
                      //,
                      //colors: [Utility.getBrandColor('primary'), Utility.getBrandColor('warning'),Utility.getBrandColor('success')]
                  });

              // DONUT
              $.plot($("#donut"), datax,
                  {
                      series: {
                          pie: {
                              innerRadius: 0.5,
                              show: true
                          }
                      },
                      legend: {
                          show: false
                      },
                      grid: {
                          hoverable: true
                      },
                      tooltip: true,
                      tooltipOpts: {
                          content: "%p.0%, %s"
                      }

                  });

              // INTERACTIVE
              $.plot($("#interactive"), datax,
                  {
                      series: {
                          pie: {
                              show: true
                          }
                      },
                      grid: {
                          hoverable: true,
                          clickable: true
                      },
                      legend: {
                          show: false
                      },
                      tooltip: true,
                      tooltipOpts: {
                          content: "%p.0%, %s"
                      }

                  });
              $("#interactive").bind("plothover", pieHover);


              function pieHover(event, pos, obj) {
                  if (!obj)
                      return;
                  percent = parseFloat(obj.series.percent).toFixed(2);
                  $("#hover").html('<span style="font-weight: bold; color: ' + obj.series.color + '">' + obj.series.label + ' (' + percent + '%)</span>');
              }


          });







      </script>          
                
        
           
   

